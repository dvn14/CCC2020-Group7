{"ast":null,"code":"var _jsxFileName = \"/home/tanto/Courses/CCC/Learns/react/ausmap/src/App.js\";\nimport React, { Component } from 'react';\nimport { Map, TileLayer } from 'react-leaflet';\nimport Choropleth from 'react-leaflet-choropleth';\nconst center = [51.505, -0.09];\nconst rectangle = [[51.49, -0.08], [51.5, -0.06]];\nconst style = {\n  fillColor: '#F28F3B',\n  weight: 2,\n  opacity: 1,\n  color: 'white',\n  dashArray: '3',\n  fillOpacity: 0.5\n};\nconst active = {};\nactive['id'] = true;\n\nconst map = geojson => /*#__PURE__*/React.createElement(Map, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(TileLayer, {\n  attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n  url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(Choropleth, {\n  data: {\n    type: 'FeatureCollection',\n    features: geojson\n  },\n  valueProperty: feature => feature.properties.value,\n  visible: feature => feature.id !== active.id,\n  scale: ['#b3cde0', '#011f4b'],\n  steps: 7,\n  mode: \"e\",\n  style: style,\n  onEachFeature: (feature, layer) => layer.bindPopup(feature.properties.label),\n  ref: el => this.choropleth = el.leafletElement,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }\n}));\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"Most Populous Cities in\\xA0Asia\"), map);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/tanto/Courses/CCC/Learns/react/ausmap/src/App.js"],"names":["React","Component","Map","TileLayer","Choropleth","center","rectangle","style","fillColor","weight","opacity","color","dashArray","fillOpacity","active","map","geojson","type","features","feature","properties","value","id","layer","bindPopup","label","el","choropleth","leafletElement","App","render","textAlign"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,eAA/B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,MAAMC,MAAM,GAAG,CAAC,MAAD,EAAS,CAAC,IAAV,CAAf;AACA,MAAMC,SAAS,GAAG,CAChB,CAAC,KAAD,EAAQ,CAAC,IAAT,CADgB,EAEhB,CAAC,IAAD,EAAO,CAAC,IAAR,CAFgB,CAAlB;AAKA,MAAMC,KAAK,GAAG;AACZC,EAAAA,SAAS,EAAE,SADC;AAEZC,EAAAA,MAAM,EAAE,CAFI;AAGZC,EAAAA,OAAO,EAAE,CAHG;AAIZC,EAAAA,KAAK,EAAE,OAJK;AAKZC,EAAAA,SAAS,EAAE,GALC;AAMZC,EAAAA,WAAW,EAAE;AAND,CAAd;AAQA,MAAMC,MAAM,GAAG,EAAf;AACCA,MAAM,CAAC,IAAD,CAAN,GAAe,IAAf;;AAED,MAAMC,GAAG,GAAIC,OAAD,iBACV,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,SAAD;AACF,EAAA,WAAW,EAAC,2EADV;AAEF,EAAA,GAAG,EAAC,oDAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,eAKE,oBAAC,UAAD;AACE,EAAA,IAAI,EAAE;AAACC,IAAAA,IAAI,EAAE,mBAAP;AAA4BC,IAAAA,QAAQ,EAAEF;AAAtC,GADR;AAEE,EAAA,aAAa,EAAGG,OAAD,IAAaA,OAAO,CAACC,UAAR,CAAmBC,KAFjD;AAGE,EAAA,OAAO,EAAGF,OAAD,IAAaA,OAAO,CAACG,EAAR,KAAeR,MAAM,CAACQ,EAH9C;AAIE,EAAA,KAAK,EAAE,CAAC,SAAD,EAAY,SAAZ,CAJT;AAKE,EAAA,KAAK,EAAE,CALT;AAME,EAAA,IAAI,EAAC,GANP;AAOE,EAAA,KAAK,EAAEf,KAPT;AAQE,EAAA,aAAa,EAAE,CAACY,OAAD,EAAUI,KAAV,KAAoBA,KAAK,CAACC,SAAN,CAAgBL,OAAO,CAACC,UAAR,CAAmBK,KAAnC,CARrC;AASE,EAAA,GAAG,EAAGC,EAAD,IAAQ,KAAKC,UAAL,GAAkBD,EAAE,CAACE,cATpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALF,CADF;;AAoBA,MAAMC,GAAN,SAAkB5B,SAAlB,CAA4B;AAC1B6B,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,EAEGhB,GAFH,CADF;AAMD;;AARyB;;AAW5B,eAAec,GAAf","sourcesContent":["\nimport React, { Component } from 'react';\nimport { Map, TileLayer } from 'react-leaflet';\nimport Choropleth from 'react-leaflet-choropleth'\n \nconst center = [51.505, -0.09]\nconst rectangle = [\n  [51.49, -0.08],\n  [51.5, -0.06],\n]\n \nconst style = {\n  fillColor: '#F28F3B',\n  weight: 2,\n  opacity: 1,\n  color: 'white',\n  dashArray: '3',\n  fillOpacity: 0.5\n}\nconst active = {}\n active['id'] = true\n\nconst map = (geojson) => (\n  <Map>\n      <TileLayer\n    attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n  />\n    <Choropleth\n      data={{type: 'FeatureCollection', features: geojson}}\n      valueProperty={(feature) => feature.properties.value}\n      visible={(feature) => feature.id !== active.id}\n      scale={['#b3cde0', '#011f4b']}\n      steps={7}\n      mode='e'\n      style={style}\n      onEachFeature={(feature, layer) => layer.bindPopup(feature.properties.label)}\n      ref={(el) => this.choropleth = el.leafletElement}\n    />\n  </Map>\n)\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <h3 style={{ textAlign: \"center\" }}>Most Populous Cities inÂ Asia</h3>\n        {map}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}