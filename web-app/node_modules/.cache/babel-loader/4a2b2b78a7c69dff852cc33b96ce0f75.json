{"ast":null,"code":"import { MapControl, withLeaflet } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nclass Legend extends MapControl {\n  createLeafletElement(props) {}\n\n  componentDidMount() {\n    const LOCALE = \"en-AU\";\n    const legend = L.control({\n      position: \"bottomleft\"\n    });\n\n    legend.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"info legend\");\n      const grades = [0, 10000, 20000, 30000, 40000, 50000, 60000, 70000, 80000, 90000];\n      let labels = [];\n      let from;\n      let to; //labels.push(\"<strong>\"+this.props.title+\"</strong>\")\n      //labels.push(this.props.desc)\n\n      for (let i = 0; i < grades.length; i++) {\n        from = grades[i];\n        to = grades[i + 1];\n        labels.push('<i style=\"opacity: 0.85;background:' + this.props.getColor(from + 1) + '\">&nbsp; &nbsp; &nbsp;</i> ' + parseInt(from).toLocaleString(LOCALE) + (to ? \"&ndash;\" + parseInt(to).toLocaleString(LOCALE) : \"+\"));\n      }\n\n      div.innerHTML = labels.join(\"<br>\");\n      return div;\n    };\n\n    const {\n      map\n    } = this.props.leaflet;\n    legend.addTo(map);\n  }\n\n}\n\nexport default withLeaflet(Legend);","map":{"version":3,"sources":["/mnt/tanto/Courses/CCC/Learns/react/ausmap-cdb/src/components/Legend.js"],"names":["MapControl","withLeaflet","L","Legend","createLeafletElement","props","componentDidMount","LOCALE","legend","control","position","onAdd","div","DomUtil","create","grades","labels","from","to","i","length","push","getColor","parseInt","toLocaleString","innerHTML","join","map","leaflet","addTo"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,QAAwC,eAAxC;AACA,OAAOC,CAAP,MAAc,SAAd;;AAEA,MAAMC,MAAN,SAAqBH,UAArB,CAAgC;AAC9BI,EAAAA,oBAAoB,CAACC,KAAD,EAAQ,CAAE;;AAC9BC,EAAAA,iBAAiB,GAAG;AAElB,UAAMC,MAAM,GAAG,OAAf;AACA,UAAMC,MAAM,GAAGN,CAAC,CAACO,OAAF,CAAU;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAV,CAAf;;AAEAF,IAAAA,MAAM,CAACG,KAAP,GAAe,MAAM;AACnB,YAAMC,GAAG,GAAGV,CAAC,CAACW,OAAF,CAAUC,MAAV,CAAiB,KAAjB,EAAwB,aAAxB,CAAZ;AACA,YAAMC,MAAM,GAAG,CAAC,CAAD,EAAI,KAAJ,EAAW,KAAX,EAAkB,KAAlB,EAAyB,KAAzB,EAAgC,KAAhC,EAAuC,KAAvC,EAA8C,KAA9C,EAAqD,KAArD,EAA4D,KAA5D,CAAf;AACA,UAAIC,MAAM,GAAG,EAAb;AACA,UAAIC,IAAJ;AACA,UAAIC,EAAJ,CALmB,CAOnB;AACA;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACK,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtCF,QAAAA,IAAI,GAAGF,MAAM,CAACI,CAAD,CAAb;AACAD,QAAAA,EAAE,GAAGH,MAAM,CAACI,CAAC,GAAG,CAAL,CAAX;AAEAH,QAAAA,MAAM,CAACK,IAAP,CACE,wCACE,KAAKhB,KAAL,CAAWiB,QAAX,CAAoBL,IAAI,GAAG,CAA3B,CADF,GAEE,6BAFF,GAGEM,QAAQ,CAACN,IAAD,CAAR,CAAeO,cAAf,CAA8BjB,MAA9B,CAHF,IAIGW,EAAE,GACF,YAAYK,QAAQ,CAACL,EAAD,CAAR,CAAaM,cAAb,CAA4BjB,MAA5B,CADV,GACgD,GALrD,CADF;AAQD;;AAEDK,MAAAA,GAAG,CAACa,SAAJ,GAAgBT,MAAM,CAACU,IAAP,CAAY,MAAZ,CAAhB;AACA,aAAOd,GAAP;AACD,KAzBD;;AA2BA,UAAM;AAAEe,MAAAA;AAAF,QAAU,KAAKtB,KAAL,CAAWuB,OAA3B;AACApB,IAAAA,MAAM,CAACqB,KAAP,CAAaF,GAAb;AACD;;AApC6B;;AAuChC,eAAe1B,WAAW,CAACE,MAAD,CAA1B","sourcesContent":["import { MapControl, withLeaflet } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nclass Legend extends MapControl {\n  createLeafletElement(props) {}\n  componentDidMount() {\n\n    const LOCALE = \"en-AU\";\n    const legend = L.control({ position: \"bottomleft\" });\n\n    legend.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"info legend\");\n      const grades = [0, 10000, 20000, 30000, 40000, 50000, 60000, 70000, 80000, 90000];\n      let labels = [];\n      let from;\n      let to;\n\n      //labels.push(\"<strong>\"+this.props.title+\"</strong>\")\n      //labels.push(this.props.desc)\n      for (let i = 0; i < grades.length; i++) {\n        from = grades[i];\n        to = grades[i + 1];\n\n        labels.push(\n          '<i style=\"opacity: 0.85;background:' +\n            this.props.getColor(from + 1) +\n            '\">&nbsp; &nbsp; &nbsp;</i> ' +\n            parseInt(from).toLocaleString(LOCALE) +\n            (to ?\n             \"&ndash;\" + parseInt(to).toLocaleString(LOCALE) : \"+\")\n        );\n      }\n\n      div.innerHTML = labels.join(\"<br>\");\n      return div;\n    };\n\n    const { map } = this.props.leaflet;\n    legend.addTo(map);\n  }\n}\n\nexport default withLeaflet(Legend);\n"]},"metadata":{},"sourceType":"module"}