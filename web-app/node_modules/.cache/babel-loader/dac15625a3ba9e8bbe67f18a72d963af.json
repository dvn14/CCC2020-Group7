{"ast":null,"code":"import _objectSpread from\"/mnt/tanto/Courses/CCC/Learns/react/ausmap-cdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/mnt/tanto/Courses/CCC/Learns/react/ausmap-cdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/mnt/tanto/Courses/CCC/Learns/react/ausmap-cdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/mnt/tanto/Courses/CCC/Learns/react/ausmap-cdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/mnt/tanto/Courses/CCC/Learns/react/ausmap-cdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Map,TileLayer,GeoJSON,CircleMarker,Tooltip,LayersControl,LayerGroup}from\"react-leaflet\";import Control from\"react-leaflet-control\";import{library}from\"@fortawesome/fontawesome-svg-core\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faDotCircle}from\"@fortawesome/free-regular-svg-icons\";import{faRunning,faHamburger,faFilm}from\"@fortawesome/free-solid-svg-icons\";import{ButtonGroup}from\"react-bootstrap\";import axios from\"axios\";import activities from\"../activities.json\";import layers from\"../layers.json\";import LayerChooser from\"./LayerChooser\";import ActivityChooser from\"./ActivityChooser\";import Legend from\"./Legend\";library.add(faDotCircle,faRunning,faHamburger,faFilm);var COLORS=[\"#f7fbff\",\"#deebf7\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#08519c\",\"#08306b\",\"#05234d\"];var LEVELS=[0,10000,20000,30000,40000,50000,60000,70000,80000,90000];//const SERVICE_ROOT_URL = \"http://localhost/json/data\";\nvar SERVICE_ROOT_URL=\"http://localhost:5000\";//const SERVICE_ROOT_URL = \"http://progo.lastanto.com/json/data\";\nvar MainMap=/*#__PURE__*/function(_Component){_inherits(MainMap,_Component);var _super=_createSuper(MainMap);function MainMap(){var _this;_classCallCheck(this,MainMap);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.activityData={};_this.indexData={};_this.state={viewport:_this.props.vp,selectedActivity:null,loading:{\"nsw\":true,\"aus\":true},selectedContentId:0,selectedContent:null,currentArea:\"aus\"};_this.getColor=function(val){var color=COLORS[0];if(val>90000){color=COLORS[9];}else if(val>80000){color=COLORS[8];}else if(val>70000){color=COLORS[7];}else if(val>60000){color=COLORS[6];}else if(val>50000){color=COLORS[5];}else if(val>40000){color=COLORS[4];}else if(val>30000){color=COLORS[3];}else if(val>20000){color=COLORS[2];}else if(val>10000){color=COLORS[1];}return color;};_this.resetView=function(){_this.setState({viewport:_this.props.vp});};_this.onViewportChanged=function(viewport){_this.setState({viewport:viewport});};_this.setSelectedActivity=function(activity){_this.setState({selectedActivity:activity});};_this.selectLayer=function(content){_this.setState({selectedContentId:content.id,selectedContent:content});};return _this;}_createClass(MainMap,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var nswRequests=[axios.get(SERVICE_ROOT_URL+\"/summaries/nsw\",{crossDomain:true}),axios.get(SERVICE_ROOT_URL+\"/indices/nsw\",{crossDomain:true})];var ausRequests=[axios.get(SERVICE_ROOT_URL+\"/summaries/aus\",{crossDomain:true}),axios.get(SERVICE_ROOT_URL+\"/indices/aus\",{crossDomain:true})];axios.all(nswRequests).then(axios.spread(function(){for(var _len2=arguments.length,responses=new Array(_len2),_key2=0;_key2<_len2;_key2++){responses[_key2]=arguments[_key2];}_this2.activityData[\"nsw\"]=responses[0].data;_this2.indexData[\"nsw\"]=responses[1].data;var loading=_objectSpread({},_this2.state.loading);loading.nsw=false;_this2.setState({loading:loading});})).catch(function(errors){console.log(\"Errors: \"+errors);});axios.all(ausRequests).then(axios.spread(function(){for(var _len3=arguments.length,responses=new Array(_len3),_key3=0;_key3<_len3;_key3++){responses[_key3]=arguments[_key3];}_this2.activityData[\"aus\"]=responses[0].data;_this2.indexData[\"aus\"]=responses[1].data;var loading=_objectSpread({},_this2.state.loading);loading.aus=false;_this2.setState({loading:loading});console.log(\"AU data loaded.\");console.log(_this2.state.loading);})).catch(function(errors){console.log(\"Errors: \"+errors);});}},{key:\"changeViewPort\",value:function changeViewPort(area){if(this.state.currentArea!==area){this.setState({currentArea:area});this.resetView();}}},{key:\"render\",value:function render(){var _this3=this;setInterval(function(){return _this3.changeViewPort(_this3.props.area);},1000);return/*#__PURE__*/React.createElement(Map,{id:\"map\",onViewportChanged:this.onViewportChanged,viewport:this.state.viewport},/*#__PURE__*/React.createElement(LayersControl,{position:\"topleft\"},/*#__PURE__*/React.createElement(Control,{position:\"topleft\"},/*#__PURE__*/React.createElement(\"button\",{className:\"leaflet-control-layers feat-btn-reset-view\",onClick:this.resetView},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faDotCircle,size:\"lg\"}))),/*#__PURE__*/React.createElement(LayersControl.BaseLayer,{checked:\"checked\",name:\"Black and White\"},/*#__PURE__*/React.createElement(TileLayer,{attribution:\"&copy <a href='http://osm.org/copyright'> OpenStreetMap</a> contributors\",url:\"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"})),/*#__PURE__*/React.createElement(LayersControl.BaseLayer,{name:\"Coloured\"},/*#__PURE__*/React.createElement(TileLayer,{attribution:\"&copy <a href='http://osm.org/copyright'> OpenStreetMap</a> contributors\",url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"}))),/*#__PURE__*/React.createElement(LayerGroup,null,this.indexData[this.state.currentArea]?/*#__PURE__*/React.createElement(GeoJSON,{key:this.state.currentArea,data:this.indexData[this.state.currentArea],style:function style(feature){return{color:'#4a83ec',weight:0.5,fillColor:_this3.getColor(feature['properties'][_this3.state.selectedContentId]),fillOpacity:0.85};}}):/*#__PURE__*/React.createElement(React.Fragment,null)),/*#__PURE__*/React.createElement(LayerGroup,null,this.state.selectedActivity&&this.activityData[this.state.currentArea][\"summary\"]?this.activityData[this.state.currentArea][\"summary\"].map(function(city,k){return/*#__PURE__*/React.createElement(CircleMarker,{color:\"#dbae28\",key:k,center:[city[\"point\"][1],city[\"point\"][0]],radius:5*Math.log(city[_this3.state.selectedActivity+\"_total\"]),fillOpacity:0.3,stroke:true,weight:2},/*#__PURE__*/React.createElement(Tooltip,{direction:\"right\",offset:[-8,-2],opacity:1},/*#__PURE__*/React.createElement(\"strong\",null,city[\"name\"],\" : \"),/*#__PURE__*/React.createElement(\"span\",null,parseInt(city[_this3.state.selectedActivity+\"_total\"]).toLocaleString(\"en-AU\"),\" (\",+(100*Math.round(city[_this3.state.selectedActivity]+\"e+4\")+\"e-4\"),\"%)\")));}):/*#__PURE__*/React.createElement(React.Fragment,null)),this.state.selectedContent?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Legend,{position:\"bottomleft\",getColor:this.getColor,levels:LEVELS}),/*#__PURE__*/React.createElement(Control,{position:\"bottomleft\"},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(\"strong\",null,this.state.selectedContent?this.state.selectedContent[\"text\"]:\"\")))):/*#__PURE__*/React.createElement(React.Fragment,null),!this.state.loading[this.state.currentArea]?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Control,{position:\"topright\"},/*#__PURE__*/React.createElement(ButtonGroup,{toggle:true},layers.map(function(layer){return/*#__PURE__*/React.createElement(LayerChooser,{layer:layer,key:layer.id,variant:layer.variant,className:layer.className,selectLayer:_this3.selectLayer});})),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null)),/*#__PURE__*/React.createElement(Control,{position:\"topright\"},/*#__PURE__*/React.createElement(ButtonGroup,{vertical:true},activities.map(function(activity){return/*#__PURE__*/React.createElement(ActivityChooser,{activity:activity,key:activity.id,selectActivity:_this3.setSelectedActivity});})))):/*#__PURE__*/React.createElement(Control,{position:\"topright\"},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Loading data...\"))));}}]);return MainMap;}(Component);export default MainMap;","map":{"version":3,"sources":["/mnt/tanto/Courses/CCC/Learns/react/ausmap-cdb/src/components/MainMap.js"],"names":["React","Component","Map","TileLayer","GeoJSON","CircleMarker","Tooltip","LayersControl","LayerGroup","Control","library","FontAwesomeIcon","faDotCircle","faRunning","faHamburger","faFilm","ButtonGroup","axios","activities","layers","LayerChooser","ActivityChooser","Legend","add","COLORS","LEVELS","SERVICE_ROOT_URL","MainMap","activityData","indexData","state","viewport","props","vp","selectedActivity","loading","selectedContentId","selectedContent","currentArea","getColor","val","color","resetView","setState","onViewportChanged","setSelectedActivity","activity","selectLayer","content","id","nswRequests","get","crossDomain","ausRequests","all","then","spread","responses","data","nsw","catch","errors","console","log","aus","area","setInterval","changeViewPort","feature","weight","fillColor","fillOpacity","map","city","k","Math","parseInt","toLocaleString","round","layer","variant","className"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Map, TileLayer,  GeoJSON, CircleMarker, Tooltip, LayersControl,\n  LayerGroup } from \"react-leaflet\";\nimport Control from \"react-leaflet-control\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDotCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport { faRunning, faHamburger,\n  faFilm } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { ButtonGroup } from \"react-bootstrap\";\n\nimport axios from \"axios\";\n\nimport activities from \"../activities.json\";\nimport layers from \"../layers.json\";\n\nimport LayerChooser from \"./LayerChooser\";\nimport ActivityChooser from \"./ActivityChooser\";\nimport Legend from \"./Legend\";\n\nlibrary.add(faDotCircle, faRunning, faHamburger, faFilm); \n\nconst COLORS = [\"#f7fbff\", \"#deebf7\", \"#c6dbef\", \"#9ecae1\", \"#6baed6\",\n                \"#4292c6\", \"#2171b5\", \"#08519c\", \"#08306b\", \"#05234d\"]\n\nconst LEVELS = [0, 10000, 20000, 30000, 40000,\n                50000, 60000, 70000, 80000, 90000];\n\n//const SERVICE_ROOT_URL = \"http://localhost/json/data\";\nconst SERVICE_ROOT_URL = \"http://localhost:5000\";\n//const SERVICE_ROOT_URL = \"http://progo.lastanto.com/json/data\";\n\nclass MainMap extends Component {\n\n  activityData = {}\n  indexData = {}\n\n  state = {\n    viewport: this.props.vp,\n    selectedActivity: null,\n    loading: {\n      \"nsw\": true,  \n      \"aus\": true\n      },\n    selectedContentId: 0,\n    selectedContent: null,\n    currentArea: \"aus\"\n  }\n\n  componentDidMount(){\n    let nswRequests = [\n      axios.get(SERVICE_ROOT_URL + \"/summaries/nsw\", {crossDomain: true }),\n      axios.get(SERVICE_ROOT_URL + \"/indices/nsw\", {crossDomain: true })\n    ];\n\n    let ausRequests = [\n      axios.get(SERVICE_ROOT_URL + \"/summaries/aus\", {crossDomain: true }),\n      axios.get(SERVICE_ROOT_URL + \"/indices/aus\", {crossDomain: true })\n    ];\n\n  axios\n    .all(nswRequests)\n    .then(\n      axios.spread((...responses) => {\n        this.activityData[\"nsw\"] = responses[0].data;\n        this.indexData[\"nsw\"] = responses[1].data;\n        let loading = {...this.state.loading};\n        loading.nsw = false;\n        this.setState({ loading });\n      })\n    )\n    .catch(errors => {\n      console.log(\"Errors: \"+errors);\n    });\n\n    axios\n    .all(ausRequests)\n    .then(\n      axios.spread((...responses) => {\n        this.activityData[\"aus\"] = responses[0].data;\n        this.indexData[\"aus\"] = responses[1].data;\n        let loading = {...this.state.loading};\n        loading.aus = false;\n        this.setState({ loading });\n        console.log(\"AU data loaded.\");\n        console.log(this.state.loading)\n      })\n    )\n    .catch(errors => {\n        console.log(\"Errors: \"+errors);\n    });\n\n    }\n\n  getColor = (val) => {\n    let color = COLORS[0];\n\n    if (val > 90000) {\n      color = COLORS[9];\n    } else if (val > 80000) {\n      color = COLORS[8];\n    } else if (val > 70000) {\n      color = COLORS[7];\n    } else if (val > 60000) {\n      color = COLORS[6];\n    } else if (val > 50000) {\n      color = COLORS[5];\n    } else if (val > 40000) {\n      color = COLORS[4];\n    } else if (val > 30000) {\n      color = COLORS[3];\n    } else if (val > 20000) {\n      color = COLORS[2];\n    } else if (val > 10000) {\n      color = COLORS[1];\n    }\n\n    return color;\n  };\n\n  resetView = () => {\n    this.setState({ viewport: this.props.vp });\n  }\n\n  onViewportChanged = (viewport) => {\n    this.setState({ viewport });\n  }\n\n  setSelectedActivity = (activity) => {\n    this.setState({ selectedActivity: activity });\n  }\n\n  changeViewPort(area) {\n    if(this.state.currentArea !== area ) {\n      this.setState({ currentArea:area });\n      this.resetView();\n    }\n  }\n\n  selectLayer = (content) => {\n    this.setState({ selectedContentId:content.id,\n                    selectedContent:content })\n  }\n\n  render() {\n    setInterval(() => this.changeViewPort(this.props.area), 1000);\n    return (\n      <Map id=\"map\" onViewportChanged={ this.onViewportChanged }\n          viewport={ this.state.viewport }>\n        <LayersControl position=\"topleft\">\n          <Control position=\"topleft\">\n            <button className=\"leaflet-control-layers feat-btn-reset-view\"\n              onClick={ this.resetView }>\n              <FontAwesomeIcon icon={ faDotCircle } size=\"lg\"/>\n            </button>\n          </Control>\n          <LayersControl.BaseLayer checked=\"checked\" name=\"Black and White\">\n            <TileLayer\n              attribution=\"&amp;copy <a href='http://osm.org/copyright'>\n                OpenStreetMap</a> contributors\"\n              url=\"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"\n            />\n          </LayersControl.BaseLayer>\n          <LayersControl.BaseLayer name=\"Coloured\">\n            <TileLayer\n              attribution=\"&amp;copy <a href='http://osm.org/copyright'>\n                OpenStreetMap</a> contributors\"\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n          </LayersControl.BaseLayer>\n          </LayersControl>\n          <LayerGroup>\n          { this.indexData[this.state.currentArea] ? (\n            <GeoJSON\n              key={ this.state.currentArea }\n              data={ this.indexData[this.state.currentArea] }\n              style={ (feature) => ({\n                color: '#4a83ec',\n                weight: 0.5,\n                fillColor: this.getColor(\n                feature['properties'][this.state.selectedContentId]),\n                fillOpacity: 0.85\n              }) }\n            />\n          ) : (<></>) }\n          </LayerGroup>\n          <LayerGroup>\n          { this.state.selectedActivity \n              && this.activityData[this.state.currentArea][\"summary\"] ? (\n            this.activityData[this.state.currentArea][\"summary\"].map(\n                (city, k) => {\n              return (\n                <CircleMarker\n                  color=\"#dbae28\"\n                  key={ k }\n                  center={ [city[\"point\"][1], city[\"point\"][0]] }\n                  radius={ 5 * Math.log(\n                    city[this.state.selectedActivity+\"_total\"]) }\n                  fillOpacity={ 0.3 }\n                  stroke={ true }\n                  weight={ 2 }\n                >\n                  <Tooltip direction=\"right\" offset={[-8, -2]} opacity={ 1 }>\n                    <strong>{ city[\"name\"] } : </strong>\n                    <span>{ parseInt(\n                      city[this.state.selectedActivity+\"_total\"])\n                        .toLocaleString(\"en-AU\") } ({ +(100*Math.round(\n                          city[this.state.selectedActivity]+\"e+4\") + \"e-4\") }%)\n                    </span>\n                  </Tooltip>\n                </CircleMarker>\n              );\n           })) : (<></>) }\n          </LayerGroup>\n          \n          { this.state.selectedContent ? (\n            <>\n              <Legend position=\"bottomleft\" \n                getColor={ this.getColor }\n                levels={ LEVELS }/>\n              <Control position=\"bottomleft\" >\n                <span>\n                  <strong>\n                    { this.state.selectedContent ?\n                      this.state.selectedContent[\"text\"] : \"\" }\n                  </strong>\n                </span>  \n              </Control>\n            </>\n            ):(<></>) }\n          { !this.state.loading[this.state.currentArea] ? (\n            <>\n              <Control position=\"topright\">\n                <ButtonGroup toggle>\n                  {layers.map(layer => (\n                    <LayerChooser\n                      layer={layer}\n                      key={layer.id}\n                      variant={layer.variant}\n                      className={layer.className}\n                      selectLayer={this.selectLayer}\n                    />\n                  )) }\n                  </ButtonGroup>\n                <br/><br/><br/>\n              </Control>\n\n              <Control position=\"topright\">\n                <ButtonGroup vertical>\n                  { activities.map(activity => (\n                    <ActivityChooser\n                      activity={activity}\n                      key={activity.id}\n                      selectActivity={this.setSelectedActivity}\n                    />\n                  )) }\n                </ButtonGroup>\n              </Control>\n            </>\n          ) : (\n            <Control position=\"topright\" >\n              <span><strong>Loading data...</strong></span>\n            </Control>\n          ) }\n        </Map>\n      \n    );\n  }\n}\n\nexport default MainMap;"]},"metadata":{},"sourceType":"module"}