{"ast":null,"code":"var _jsxFileName = \"/home/tanto/Courses/CCC/Learns/react/ausmap/src/App.js\";\nimport React, { Component, useState } from 'react';\nimport './App.css';\nimport { Map, TileLayer, GeoJSON, Marker, Popup, CircleMarker, Tooltip, LayersControl, LayerGroup, Circle, FeatureGroup, Rectangle, withLeaflet } from 'react-leaflet';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faRunning, faGamepad, faLaptopHouse, faHamburger, faFilm } from '@fortawesome/free-solid-svg-icons';\nimport { ReactLeafletGroupedLayerControl as ReactLeafletGroupedLayerControlForLeafletV1 } from 'react-leaflet-grouped-layer-control';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Control from 'react-leaflet-control';\nimport data2 from 'geojson-world-map';\nimport data1 from './sample.json';\nimport data3 from './us-states.json';\nimport data4 from './esa09.json';\nimport data8 from './file_copy.json';\nimport data from './data7984821864271563851.json';\nimport features from './features.json';\nimport cities from './cities.json';\nimport sydney from './sydney.json';\nimport aus from './aus.json';\nimport data0 from './census.json';\nimport data6 from './multipoly.json';\nimport data77 from './census.json';\nimport { LatLng } from 'leaflet';\nimport activities from './activities.json';\nimport layers from './layers.json';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Activity } from './Activity';\nimport { LayerChooser } from './LayerChooser';\nlibrary.add(faRunning, faGamepad, faLaptopHouse, faHamburger, faFilm);\nconst {\n  BaseLayer,\n  Overlay\n} = LayersControl; //https://data.gov.au/geoserver/nsw-suburb-locality-boundaries-psma-administrative-boundaries/wfs?request=GetFeature&typeName=ckan_91e70237_d9d1_4719_a82f_e71b811154c6&outputFormat=json\n//const center = [-23.116667, 132.133333]\n//const center = [ -33.807908, 151.0007289 ]\n\nconst center = [-33.834905, 150.9673231]; // Greater Sidney central\n//const center = [-25.6101111,134.3547222] //Australia central\n\nconst rectangle = [[51.49, -0.08], [51.5, -0.06]];\nconst layerStyle = {\n  display: 'none',\n  float: 'right'\n};\nconst colors = ['#800026', '#BD0026', '#E31A1C', '#FC4E2A', '#FD8D3C', '#FEB24C', '#FED976', '#FFEDA0'];\n\nfunction getColor(d) {\n  let rand = Math.floor(Math.random() * Math.floor(colors.length));\n  return colors[rand];\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [],\n      showMyComponent: false,\n      ordered: false,\n      selected: 'exercise',\n      selectedData: aus\n    };\n\n    this.setSelected = activity => {\n      console.log(\"setSelected: \" + activity);\n      this.setState({\n        selected: activity\n      });\n    };\n\n    this.selectOverlayLayer = layer => {\n      console.log(\"selectOverlayLayer: \" + layer);\n      this.setState({\n        selectedData: layer.data\n      });\n    };\n  }\n\n  render() {\n    console.log(\"returning: \");\n    return (\n      /*#__PURE__*/\n      //Sydney zoom level 9 aus 5\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, \"Most Populous Cities in\\xA0Asia\"), /*#__PURE__*/React.createElement(Map, {\n        center: center,\n        zoom: 9,\n        style: {\n          width: \"80vh\",\n          height: \"100vh\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(LayersControl, {\n        position: \"topright\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(BaseLayer, {\n        checked: \"checked\",\n        name: \"Black and White\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TileLayer, {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(BaseLayer, {\n        name: \"Colored\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TileLayer, {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Overlay, {\n        name: \"Imagination\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(LayerGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(GeoJSON, {\n        data: aus,\n        style: feature => ({\n          color: '#4a83ec',\n          weight: 0.5,\n          fillColor: getColor(feature),\n          fillOpacity: 0.2\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Marker, {\n        position: [50, 10],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Popup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }, \"Popup for any custom information.\")))), /*#__PURE__*/React.createElement(Overlay, {\n        name: \"Economic Status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(LayerGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(GeoJSON, {\n        data: data,\n        style: feature => ({\n          color: '#4a83ec',\n          weight: 0.5,\n          fillColor: '#4a83ec',\n          //getColor(feature),\n          fillOpacity: 0.1\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Marker, {\n        position: [50, 10],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Popup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }\n      }, \"Popup for any custom information.\"))))), this.state.showMyComponent && /*#__PURE__*/React.createElement(LayerGroup, {\n        style: layerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Circle, {\n        center: center,\n        fillColor: \"blue\",\n        radius: 200,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Circle, {\n        center: center,\n        fillColor: \"red\",\n        radius: 100,\n        stroke: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(LayerGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Circle, {\n        center: [51.51, -0.08],\n        color: \"green\",\n        fillColor: \"green\",\n        radius: 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }\n      }))), cities.map((city, k) => {\n        return /*#__PURE__*/React.createElement(CircleMarker, {\n          key: k,\n          center: [city[\"coordinates\"][1], city[\"coordinates\"][0]],\n          radius: 5 * Math.log(city[this.state.selected] / 100000),\n          fillOpacity: 0.9,\n          stroke: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Tooltip, {\n          direction: \"right\",\n          offset: [-8, -2],\n          opacity: 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 19\n          }\n        }, city[\"name\"]), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 19\n          }\n        }, city[\"id\"] + \" \" + city[this.state.selected])));\n      }), /*#__PURE__*/React.createElement(LayerGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(GeoJSON, {\n        data: this.state.selectedData,\n        style: feature => ({\n          color: '#4a83ec',\n          weight: 0.5,\n          fillColor: getColor(feature),\n          fillOpacity: 0.2\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Marker, {\n        position: [50, 10],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Popup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }\n      }, \"Popup for any custom information.\"))), /*#__PURE__*/React.createElement(Control, {\n        position: \"topleft\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.setState({\n          showMyComponent: !this.state.showMyComponent\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }\n      }, \"Reset View\"), /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }\n      }, activities.map(activity => /*#__PURE__*/React.createElement(Col, {\n        className: \"mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(LayerChooser, {\n        layer: activity,\n        key: activity.id,\n        selectLayer: this.setSelected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }\n      })))))), /*#__PURE__*/React.createElement(Control, {\n        position: \"topleft\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 9\n        }\n      }, layers.map(layer => /*#__PURE__*/React.createElement(Col, {\n        className: \"mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(LayerChooser, {\n        layer: layer,\n        key: layer.id,\n        selectLayer: this.selectOverlayLayer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }\n      }))))))))\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/tanto/Courses/CCC/Learns/react/ausmap/src/App.js"],"names":["React","Component","useState","Map","TileLayer","GeoJSON","Marker","Popup","CircleMarker","Tooltip","LayersControl","LayerGroup","Circle","FeatureGroup","Rectangle","withLeaflet","library","faRunning","faGamepad","faLaptopHouse","faHamburger","faFilm","ReactLeafletGroupedLayerControl","ReactLeafletGroupedLayerControlForLeafletV1","FontAwesomeIcon","Control","data2","data1","data3","data4","data8","data","features","cities","sydney","aus","data0","data6","data77","LatLng","activities","layers","Container","Row","Col","Activity","LayerChooser","add","BaseLayer","Overlay","center","rectangle","layerStyle","display","float","colors","getColor","d","rand","Math","floor","random","length","App","state","todos","showMyComponent","ordered","selected","selectedData","setSelected","activity","console","log","setState","selectOverlayLayer","layer","render","textAlign","width","height","feature","color","weight","fillColor","fillOpacity","map","city","k","id"],"mappings":"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","sourcesContent":["\nimport React, { Component, useState } from 'react';\n\nimport './App.css';\nimport { Map, TileLayer, GeoJSON, Marker, Popup, CircleMarker ,Tooltip,\n  LayersControl,\n  LayerGroup,\n  Circle, FeatureGroup, Rectangle, withLeaflet } from 'react-leaflet';\n\n  import { library } from '@fortawesome/fontawesome-svg-core';\n  import { faRunning, faGamepad, faLaptopHouse, faHamburger, faFilm } from '@fortawesome/free-solid-svg-icons';\n\n  import { ReactLeafletGroupedLayerControl as ReactLeafletGroupedLayerControlForLeafletV1} from 'react-leaflet-grouped-layer-control';\n  \n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport Control from 'react-leaflet-control';\nimport data2 from 'geojson-world-map';\nimport data1 from './sample.json';\nimport data3 from './us-states.json';\nimport data4 from './esa09.json';\nimport data8 from './file_copy.json';\nimport data from './data7984821864271563851.json';\nimport features from './features.json';\nimport cities from './cities.json';\nimport sydney from './sydney.json';\nimport aus from './aus.json';\nimport data0 from './census.json';\nimport data6 from './multipoly.json';\nimport data77 from './census.json';\nimport { LatLng } from 'leaflet';\n\nimport activities from './activities.json';\nimport layers from './layers.json';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Activity } from './Activity';\nimport { LayerChooser } from './LayerChooser';\n\nlibrary.add(faRunning, faGamepad, faLaptopHouse, faHamburger, faFilm); \n\n\nconst { BaseLayer, Overlay } = LayersControl\n//https://data.gov.au/geoserver/nsw-suburb-locality-boundaries-psma-administrative-boundaries/wfs?request=GetFeature&typeName=ckan_91e70237_d9d1_4719_a82f_e71b811154c6&outputFormat=json\n//const center = [-23.116667, 132.133333]\n//const center = [ -33.807908, 151.0007289 ]\nconst center = [-33.834905,150.9673231]  // Greater Sidney central\n//const center = [-25.6101111,134.3547222] //Australia central\nconst rectangle = [\n  [51.49, -0.08],\n  [51.5, -0.06],\n]\nconst layerStyle = {\n  display: 'none',\n  float: 'right'\n}\nconst colors = ['#800026','#BD0026', '#E31A1C', '#FC4E2A', '#FD8D3C', '#FEB24C', '#FED976', '#FFEDA0'];\nfunction getColor(d) {\n  let rand = Math.floor(Math.random() * Math.floor(colors.length));\n  return colors[rand];\n}\n\nclass App extends Component {\n  state = {\n    todos: [],\n    showMyComponent: false,\n    ordered: false,\n    selected: 'exercise',\n    selectedData: aus\n  }\n\n  setSelected = (activity) => {\n    console.log(\"setSelected: \"+activity);\n    this.setState({ selected: activity })\n  }\n\n  selectOverlayLayer = (layer) => {\n    console.log(\"selectOverlayLayer: \"+layer);\n    this.setState({ selectedData: layer.data })\n  }\n\n  render() {\n\n    console.log(\"returning: \")\n    return ( //Sydney zoom level 9 aus 5\n      <div>\n        <h3 style={{ textAlign: \"center\" }}>Most Populous Cities in Asia</h3>\n        <Map center={center} zoom={9} style={{ width: \"80vh\", height: \"100vh\" }}>\n\n        <LayersControl position=\"topright\">\n        <BaseLayer checked=\"checked\" name=\"Black and White\">\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"\n            />\n          </BaseLayer>\n        <BaseLayer name=\"Colored\">\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n          </BaseLayer>\n\n          <Overlay name=\"Imagination\">\n          <LayerGroup>\n          <GeoJSON\n          data={aus}\n          style={(feature) => ({\n            color: '#4a83ec',\n            weight: 0.5,\n            fillColor: getColor(feature),\n            fillOpacity: 0.2,\n          })}\n        />\n         <Marker position={[50, 10]}>\n          <Popup>\n            Popup for any custom information.\n          </Popup>\n        </Marker>\n        </LayerGroup>\n          </Overlay>\n          <Overlay name=\"Economic Status\">\n            <LayerGroup>\n          <GeoJSON\n          data={data}\n          style={(feature) => ({\n            color: '#4a83ec',\n            weight: 0.5,\n            fillColor: '#4a83ec',//getColor(feature),\n            fillOpacity: 0.1,\n          })}\n        />\n         <Marker position={[50, 10]}>\n          <Popup>\n            Popup for any custom information.\n          </Popup>\n        </Marker>\n        </LayerGroup>\n          </Overlay>\n          </LayersControl>\n          { this.state.showMyComponent && \n            <LayerGroup style={layerStyle}>\n              <Circle center={center} fillColor=\"blue\" radius={200} />\n              <Circle\n                center={center}\n                fillColor=\"red\"\n                radius={100}\n                stroke={false}\n              />\n              <LayerGroup>\n                <Circle\n                  center={[51.51, -0.08]}\n                  color=\"green\"\n                  fillColor=\"green\"\n                  radius={100}\n                />\n              </LayerGroup>\n            </LayerGroup>\n            }\n\n        {cities.map((city, k) => {\n            return (\n              <CircleMarker\n                key={k}\n                center={[city[\"coordinates\"][1], city[\"coordinates\"][0]]}\n                radius={5 * Math.log(city[this.state.selected] / 100000)}\n                fillOpacity={0.9}\n                stroke={true}\n              >\n                <Tooltip direction=\"right\" offset={[-8, -2]} opacity={1}>\n                  <strong>{city[\"name\"]}</strong>\n                  <span>{city[\"id\"] + \" \" + city[this.state.selected]}</span>\n                </Tooltip>\n              </CircleMarker>\n            );\n          })}\n\n<LayerGroup>\n          <GeoJSON\n          data={this.state.selectedData}\n          style={(feature) => ({\n            color: '#4a83ec',\n            weight: 0.5,\n            fillColor: getColor(feature),\n            fillOpacity: 0.2,\n          })}\n        />\n         <Marker position={[50, 10]}>\n          <Popup>\n            Popup for any custom information.\n          </Popup>\n        </Marker>\n        </LayerGroup>\n                \n      <Control position=\"topleft\" >\n        <button \n          onClick={ () => this.setState({showMyComponent: !this.state.showMyComponent}) }\n        >\n          Reset View\n        </button>\n        <Container>\n        <Row>\n        {activities.map(activity => (\n          <Col className=\"mb-5\">\n            <LayerChooser layer={activity} key={activity.id} selectLayer={this.setSelected} />\n          </Col>\n        ))}\n        </Row>\n        </Container>\n      </Control>\n      <Control position=\"topleft\" >\n        <Container>\n        <Row>\n        {layers.map(layer => (\n          <Col className=\"mb-5\">\n            <LayerChooser layer={layer} key={layer.id} selectLayer={this.selectOverlayLayer} />\n          </Col>\n        ))}\n        </Row>\n        </Container>\n      </Control>\n</Map>\n\n      </div>          \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}