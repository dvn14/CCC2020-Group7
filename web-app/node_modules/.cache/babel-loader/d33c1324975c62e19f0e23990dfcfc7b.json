{"ast":null,"code":"var _jsxFileName = \"/home/tanto/Courses/CCC/Learns/react/ausmap/src/App.js\";\nimport React, { Component } from 'react';\nimport { Map, TileLayer, GeoJSON, Marker, Popup } from 'react-leaflet';\nimport data2 from 'geojson-world-map';\nimport data1 from './sample.json';\nimport data3 from './us-states.json';\nimport data4 from './esa09.json';\nimport data8 from './file_copy.json';\nimport data9 from './data7984821864271563851.json';\nimport data0 from './census.json';\nimport data6 from './multipoly.json';\nimport data from './census.json';\nimport { LatLng } from 'leaflet';\nconst center = [-23.116667, 132.133333]; //const center = [39.74739, -105]\n\nconst rectangle = [[51.49, -0.08], [51.5, -0.06]];\n\nfunction getColor(d) {\n  //d.properties.loc_pid.startsWith('NSW') ? '#800026' :\n  return d > 1000 ? '#800026' : d > 500 ? '#BD0026' : d > 200 ? '#E31A1C' : d > 100 ? '#FC4E2A' : d > 50 ? '#FD8D3C' : d > 20 ? '#FEB24C' : d > 10 ? '#FED976' : '#FFEDA0';\n}\n\nclass App extends Component {\n  render() {\n    console.log(\"returning: \");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"Most Populous Cities in\\xA0Asia\"), /*#__PURE__*/React.createElement(Map, {\n      center: center,\n      zoom: 13,\n      style: {\n        height: \"900px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(GeoJSON, {\n      data: data //   coordsToLatLng={function (coords) {\n      //                    latitude , longitude, altitude\n      //return new L.LatLng(coords[1], coords[0], coords[2]); //Normal behavior\n      //   console.log(\"coords0: \" + coords+\", t:\"+typeof(coords)+\", i:\")\n      //return new LatLng(coords[0], coords[1], coords[2]);\n      //<LatLng>3,4</LatLng>\n      // console.log(\"coords1: \" + new LatLng(coords[1], coords[0], coords[2])+\", t:\"+typeof(coords)+\", i:\")\n      //  return new LatLng(coords[1], coords[0], coords[2]);\n      //return <LatLng lat={coords[0]} lng={coords[1]} latitude={coords[0]} longitude={coords[1]}></LatLng>\n      // }}\n      ,\n      style: feature => ({\n        color: '#4a83ec',\n        weight: 0.5,\n        fillColor: getColor(feature),\n        fillOpacity: 0.7\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Marker, {\n      position: [50, 10],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"Popup for any custom information.\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/tanto/Courses/CCC/Learns/react/ausmap/src/App.js"],"names":["React","Component","Map","TileLayer","GeoJSON","Marker","Popup","data2","data1","data3","data4","data8","data9","data0","data6","data","LatLng","center","rectangle","getColor","d","App","render","console","log","textAlign","height","feature","color","weight","fillColor","fillOpacity"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,OAAzB,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,eAAvD;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,MAAT,QAAuB,SAAvB;AAEA,MAAMC,MAAM,GAAG,CAAC,CAAC,SAAF,EAAa,UAAb,CAAf,C,CACA;;AACA,MAAMC,SAAS,GAAG,CAChB,CAAC,KAAD,EAAQ,CAAC,IAAT,CADgB,EAEhB,CAAC,IAAD,EAAO,CAAC,IAAR,CAFgB,CAAlB;;AAIA,SAASC,QAAT,CAAkBC,CAAlB,EAAqB;AACjB;AACA,SAAOA,CAAC,GAAG,IAAJ,GAAW,SAAX,GACAA,CAAC,GAAG,GAAJ,GAAW,SAAX,GACAA,CAAC,GAAG,GAAJ,GAAW,SAAX,GACAA,CAAC,GAAG,GAAJ,GAAW,SAAX,GACAA,CAAC,GAAG,EAAJ,GAAW,SAAX,GACAA,CAAC,GAAG,EAAJ,GAAW,SAAX,GACAA,CAAC,GAAG,EAAJ,GAAW,SAAX,GACW,SAPlB;AAQH;;AAED,MAAMC,GAAN,SAAkBpB,SAAlB,CAA4B;AAE1BqB,EAAAA,MAAM,GAAG;AAEPC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,eAEE,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAER,MAAb;AAAqB,MAAA,IAAI,EAAE,EAA3B;AAA+B,MAAA,KAAK,EAAE;AAAES,QAAAA,MAAM,EAAE;AAAV,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACN,oBAAC,SAAD;AACE,MAAA,WAAW,EAAC,2EADd;AAEE,MAAA,GAAG,EAAC,oDAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADM,eAKE,oBAAC,OAAD;AACA,MAAA,IAAI,EAAEX,IADN,CAEH;AACK;AACA;AACH;AACG;AACA;AACD;AACD;AACE;AACL;AAXG;AAYA,MAAA,KAAK,EAAGY,OAAD,KAAc;AACnBC,QAAAA,KAAK,EAAE,SADY;AAEnBC,QAAAA,MAAM,EAAE,GAFW;AAGnBC,QAAAA,SAAS,EAAEX,QAAQ,CAACQ,OAAD,CAHA;AAInBI,QAAAA,WAAW,EAAE;AAJM,OAAd,CAZP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAwBC,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADD,CAxBD,CAFF,CADF;AAoCD;;AAzCyB;;AA4C5B,eAAeV,GAAf","sourcesContent":["\nimport React, { Component } from 'react';\nimport { Map, TileLayer, GeoJSON, Marker, Popup } from 'react-leaflet';\nimport data2 from 'geojson-world-map';\nimport data1 from './sample.json';\nimport data3 from './us-states.json';\nimport data4 from './esa09.json';\nimport data8 from './file_copy.json';\nimport data9 from './data7984821864271563851.json';\nimport data0 from './census.json';\nimport data6 from './multipoly.json';\nimport data from './census.json';\nimport { LatLng } from 'leaflet';\n\nconst center = [-23.116667, 132.133333]\n//const center = [39.74739, -105]\nconst rectangle = [\n  [51.49, -0.08],\n  [51.5, -0.06],\n]\nfunction getColor(d) {\n    //d.properties.loc_pid.startsWith('NSW') ? '#800026' :\n    return d > 1000 ? '#800026' :\n           d > 500  ? '#BD0026' :\n           d > 200  ? '#E31A1C' :\n           d > 100  ? '#FC4E2A' :\n           d > 50   ? '#FD8D3C' :\n           d > 20   ? '#FEB24C' :\n           d > 10   ? '#FED976' :\n                      '#FFEDA0';\n}\n\nclass App extends Component {\n    \n  render() {\n\n    console.log(\"returning: \")\n    return (\n      <div>\n        <h3 style={{ textAlign: \"center\" }}>Most Populous Cities inÂ Asia</h3>\n        <Map center={center} zoom={13} style={{ height: \"900px\" }}>\n  <TileLayer\n    attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n  />\n          <GeoJSON\n          data={data}\n       //   coordsToLatLng={function (coords) {\n            //                    latitude , longitude, altitude\n            //return new L.LatLng(coords[1], coords[0], coords[2]); //Normal behavior\n         //   console.log(\"coords0: \" + coords+\", t:\"+typeof(coords)+\", i:\")\n            //return new LatLng(coords[0], coords[1], coords[2]);\n            //<LatLng>3,4</LatLng>\n           // console.log(\"coords1: \" + new LatLng(coords[1], coords[0], coords[2])+\", t:\"+typeof(coords)+\", i:\")\n          //  return new LatLng(coords[1], coords[0], coords[2]);\n            //return <LatLng lat={coords[0]} lng={coords[1]} latitude={coords[0]} longitude={coords[1]}></LatLng>\n       // }}\n          style={(feature) => ({\n            color: '#4a83ec',\n            weight: 0.5,\n            fillColor: getColor(feature),\n            fillOpacity: 0.7,\n          })}\n        />\n         <Marker position={[50, 10]}>\n          <Popup>\n            Popup for any custom information.\n          </Popup>\n        </Marker>\n</Map>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}