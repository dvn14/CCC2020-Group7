{"ast":null,"code":"import { MapControl, withLeaflet } from \"react-leaflet\";\nimport L from \"leaflet\"; //const colors = ['#f7fcf5','#e5f5e0','#c7e9c0','#a1d99b', '#74c476','#41ab5d',\n//                '#238b45', '#005a32'];\n//const colors = ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6',\n//                '#2171b5', '#08519c', '#08306b', '#05234d']\n\nclass Legend extends MapControl {\n  createLeafletElement(props) {}\n\n  componentDidMount() {\n    // get color depending on population density value\n    //const { getColor } = this.props.getColor;\n    // const getColor = d => {\n    //   return d > 90\n    //     ? colors[9]\n    //     : d > 80\n    //     ? colors[8]\n    //     : d > 70\n    //     ? colors[7]\n    //     : d > 60\n    //     ? colors[6]\n    //     : d > 50\n    //     ? colors[5]\n    //     : d > 40\n    //     ? colors[4]\n    //     : d > 30\n    //     ? colors[3]\n    //     : d > 20\n    //     ? colors[2]\n    //     : d > 10\n    //     ? colors[1]\n    //     : colors[0];\n    // };\n    const LOCALE = \"en-AU\";\n    const legend = L.control({\n      position: \"bottomright\"\n    });\n\n    legend.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"info legend\");\n      const grades = [0, 10000, 20000, 30000, 40000, 50000, 60000, 70000, 80000, 90000];\n      let labels = [];\n      let from;\n      let to; //labels.push(\"<strong>\"+this.props.title+\"</strong>\")\n      //labels.push(this.props.desc)\n\n      for (let i = 0; i < grades.length; i++) {\n        from = grades[i];\n        to = grades[i + 1];\n        labels.push('<i style=\"opacity: 0.85;background:' + this.props.getColor(from + 1) + '\">&nbsp; &nbsp; &nbsp;</i> ' + parseInt(from).toLocaleString(LOCALE) + (parseInt(to).toLocaleString(LOCALE) ? \"&ndash;\" + to : \"+\"));\n      }\n\n      div.innerHTML = labels.join(\"<br>\");\n      return div;\n    };\n\n    const {\n      map\n    } = this.props.leaflet;\n    legend.addTo(map);\n  }\n\n}\n\nexport default withLeaflet(Legend);","map":{"version":3,"sources":["/home/tanto/Courses/CCC/Learns/react/ausmap/src/components/Legend.js"],"names":["MapControl","withLeaflet","L","Legend","createLeafletElement","props","componentDidMount","LOCALE","legend","control","position","onAdd","div","DomUtil","create","grades","labels","from","to","i","length","push","getColor","parseInt","toLocaleString","innerHTML","join","map","leaflet","addTo"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,QAAwC,eAAxC;AACA,OAAOC,CAAP,MAAc,SAAd,C,CAGA;AACA;AACA;AACA;;AAEA,MAAMC,MAAN,SAAqBH,UAArB,CAAgC;AAC9BI,EAAAA,oBAAoB,CAACC,KAAD,EAAQ,CAAE;;AAC9BC,EAAAA,iBAAiB,GAAG;AAClB;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,UAAMC,MAAM,GAAG,OAAf;AACA,UAAMC,MAAM,GAAGN,CAAC,CAACO,OAAF,CAAU;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAV,CAAf;;AAEAF,IAAAA,MAAM,CAACG,KAAP,GAAe,MAAM;AACnB,YAAMC,GAAG,GAAGV,CAAC,CAACW,OAAF,CAAUC,MAAV,CAAiB,KAAjB,EAAwB,aAAxB,CAAZ;AACA,YAAMC,MAAM,GAAG,CAAC,CAAD,EAAI,KAAJ,EAAW,KAAX,EAAkB,KAAlB,EAAyB,KAAzB,EAAgC,KAAhC,EAAuC,KAAvC,EAA8C,KAA9C,EAAqD,KAArD,EAA4D,KAA5D,CAAf;AACA,UAAIC,MAAM,GAAG,EAAb;AACA,UAAIC,IAAJ;AACA,UAAIC,EAAJ,CALmB,CAOnB;AACA;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACK,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtCF,QAAAA,IAAI,GAAGF,MAAM,CAACI,CAAD,CAAb;AACAD,QAAAA,EAAE,GAAGH,MAAM,CAACI,CAAC,GAAG,CAAL,CAAX;AAEAH,QAAAA,MAAM,CAACK,IAAP,CACE,wCACE,KAAKhB,KAAL,CAAWiB,QAAX,CAAoBL,IAAI,GAAG,CAA3B,CADF,GAEE,6BAFF,GAGEM,QAAQ,CAACN,IAAD,CAAR,CAAeO,cAAf,CAA8BjB,MAA9B,CAHF,IAIGgB,QAAQ,CAACL,EAAD,CAAR,CAAaM,cAAb,CAA4BjB,MAA5B,IACA,YAAYW,EADZ,GACiB,GALpB,CADF;AAQD;;AAEDN,MAAAA,GAAG,CAACa,SAAJ,GAAgBT,MAAM,CAACU,IAAP,CAAY,MAAZ,CAAhB;AACA,aAAOd,GAAP;AACD,KAzBD;;AA2BA,UAAM;AAAEe,MAAAA;AAAF,QAAU,KAAKtB,KAAL,CAAWuB,OAA3B;AACApB,IAAAA,MAAM,CAACqB,KAAP,CAAaF,GAAb;AACD;;AA7D6B;;AAgEhC,eAAe1B,WAAW,CAACE,MAAD,CAA1B","sourcesContent":["import { MapControl, withLeaflet } from \"react-leaflet\";\nimport L from \"leaflet\";\n\n\n//const colors = ['#f7fcf5','#e5f5e0','#c7e9c0','#a1d99b', '#74c476','#41ab5d',\n//                '#238b45', '#005a32'];\n//const colors = ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6',\n//                '#2171b5', '#08519c', '#08306b', '#05234d']\n\nclass Legend extends MapControl {\n  createLeafletElement(props) {}\n  componentDidMount() {\n    // get color depending on population density value\n\n    //const { getColor } = this.props.getColor;\n    \n    // const getColor = d => {\n    //   return d > 90\n    //     ? colors[9]\n    //     : d > 80\n    //     ? colors[8]\n    //     : d > 70\n    //     ? colors[7]\n    //     : d > 60\n    //     ? colors[6]\n    //     : d > 50\n    //     ? colors[5]\n    //     : d > 40\n    //     ? colors[4]\n    //     : d > 30\n    //     ? colors[3]\n    //     : d > 20\n    //     ? colors[2]\n    //     : d > 10\n    //     ? colors[1]\n    //     : colors[0];\n    // };\n\n    const LOCALE = \"en-AU\";\n    const legend = L.control({ position: \"bottomright\" });\n\n    legend.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"info legend\");\n      const grades = [0, 10000, 20000, 30000, 40000, 50000, 60000, 70000, 80000, 90000];\n      let labels = [];\n      let from;\n      let to;\n\n      //labels.push(\"<strong>\"+this.props.title+\"</strong>\")\n      //labels.push(this.props.desc)\n      for (let i = 0; i < grades.length; i++) {\n        from = grades[i];\n        to = grades[i + 1];\n\n        labels.push(\n          '<i style=\"opacity: 0.85;background:' +\n            this.props.getColor(from + 1) +\n            '\">&nbsp; &nbsp; &nbsp;</i> ' +\n            parseInt(from).toLocaleString(LOCALE) +\n            (parseInt(to).toLocaleString(LOCALE) ?\n             \"&ndash;\" + to : \"+\")\n        );\n      }\n\n      div.innerHTML = labels.join(\"<br>\");\n      return div;\n    };\n\n    const { map } = this.props.leaflet;\n    legend.addTo(map);\n  }\n}\n\nexport default withLeaflet(Legend);\n"]},"metadata":{},"sourceType":"module"}