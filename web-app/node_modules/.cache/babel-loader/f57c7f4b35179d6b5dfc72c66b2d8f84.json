{"ast":null,"code":"import _classCallCheck from\"/home/tanto/Courses/CCC/Learns/react/ausmap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/tanto/Courses/CCC/Learns/react/ausmap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/tanto/Courses/CCC/Learns/react/ausmap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/tanto/Courses/CCC/Learns/react/ausmap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Control from'react-leaflet-control';import{Map,TileLayer,GeoJSON,Marker,Popup,CircleMarker,Tooltip,LayersControl,LayerGroup,Circle}from'react-leaflet';import{library}from'@fortawesome/fontawesome-svg-core';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faDotCircle}from'@fortawesome/free-regular-svg-icons';import{faRunning,faGamepad,faLaptopHouse,faHamburger,faFilm,faChartPie,faPeopleCarry}from'@fortawesome/free-solid-svg-icons';//TODO: change to list\n//import cities from '../cities.json';\nimport nswSummary from'../data/nsw-summary.json';import auSummary from'../data/au-summary.json';import{ButtonGroup}from'react-bootstrap';//import aus from '../aus.json';\nimport auIndex from'../data/au-index.json';import nswIndex from'../data/nsw-index.json';//import aus from '../data/data6207385239988214929.json';\nimport activities from'../activities.json';import layers from'../layers.json';import LayerChooser from'./LayerChooser';import ActivityChooser from'./ActivityChooser';import Legend from\"./Legend\";library.add(faDotCircle,faRunning,faGamepad,faLaptopHouse,faHamburger,faFilm,faChartPie,faPeopleCarry);var ACTIVITY_DATA={\"au\":auSummary,\"nsw\":nswSummary};var INDEX_DATA={\"au\":auIndex,\"nsw\":nswIndex};var INDEX_LAYER={0:{legendTitle:\"Employment ratio (%)\",data:'occ_labours'},1:{legendTitle:\"Education ratio (%)\",data:'edu_secondary'},2:{legendTitle:\"Income average ($1000)\",data:'mean_income'}};var DEFAULT_ZOOM_LEVEL=9;// Greater Sydney zoom level\nvar DEFAULT_CENTER=[-33.834905,150.9673231];// Greater Sidney center\n//const DEFAULT_ZOOM_LEVEL = 5; // Australia zoom level\n//const DEFAULT_CENTER =  = [-25.6101111,134.3547222] // Australia center\nvar DEFAULT_VIEWPORT={center:DEFAULT_CENTER,zoom:DEFAULT_ZOOM_LEVEL};//https://data.gov.au/geoserver/nsw-suburb-locality-boundaries-psma-administrative-boundaries/wfs?request=GetFeature&typeName=ckan_91e70237_d9d1_4719_a82f_e71b811154c6&outputFormat=json\nvar layerStyle={display:'none',float:'right'};var colors0=['#f7fcf5','#e5f5e0','#c7e9c0','#a1d99b','#74c476','#41ab5d','#238b45','#005a32'];var colors1=['#fff5eb','#fee6ce','#fdd0a2','#fdae6b','#fd8d3c','#f16913','#d94801','#a63603','#7f2704','#671f03'];var COLORS=['#f7fbff','#deebf7','#c6dbef','#9ecae1','#6baed6','#4292c6','#2171b5','#08519c','#08306b','#05234d'];function getColor0(d,idx){// TODO: Replace with the real implementation\n// let color = (90 - d['properties']['Name'].toUpperCase().codePointAt(idx)) % 8;\nvar color=Math.floor(Math.random()*Math.floor(COLORS.length));return COLORS[color];}var getColor01=function getColor01(layerId,d){//layerId === 2\n//  ? d = d / 1000\n//  : d = d * 100\nd=d/1000;console.log('color: '+d);return d>90?COLORS[9]:d>80?COLORS[8]:d>70?COLORS[7]:d>60?COLORS[6]:d>50?COLORS[5]:d>40?COLORS[4]:d>30?COLORS[3]:d>20?COLORS[2]:d>10?COLORS[1]:COLORS[0];};var MainMap=/*#__PURE__*/function(_Component){_inherits(MainMap,_Component);var _super=_createSuper(MainMap);function MainMap(){var _this;_classCallCheck(this,MainMap);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={viewport:_this.props.vp,selectedActivity:null,//    selectedData: nswIndex,\nselectedContentId:0,selectedContent:null,currentArea:\"nsw\"//    activityData: ACTIVITY_DATA[\"nsw\"],\n//    indexData: INDEX_DATA[\"nsw\"]\n};_this.getColor=function(d){//layerId === 2\n//  ? d = d / 1000\n//  : d = d * 100\nd=d/1000;console.log('color: '+d);return d>90?COLORS[9]:d>80?COLORS[8]:d>70?COLORS[7]:d>60?COLORS[6]:d>50?COLORS[5]:d>40?COLORS[4]:d>30?COLORS[3]:d>20?COLORS[2]:d>10?COLORS[1]:COLORS[0];};_this.resetView=function(){console.log(_this.props.vp);_this.setState({viewport:_this.props.vp});};_this.onViewportChanged=function(viewport){_this.setState({viewport:viewport});};_this.setSelectedActivity=function(activity){console.log(\"selectActiviy: \"+activity);_this.setState({selectedActivity:activity});};_this.selectLayer=function(content){console.log(_this.state.currentArea+\" :id:\"+content.id+\"->\");_this.setState({selectedContentId:content.id,selectedContent:content});};return _this;}_createClass(MainMap,[{key:\"changeViewPort\",value:function changeViewPort(area){console.log(\"area: \"+area);if(this.state.currentArea!==area){this.setState({currentArea:area});//    this.state.activityData = ACTIVITY_DATA[area]\n//    this.state.indexData = INDEX_DATA[area]\nthis.resetView();console.log(\"reset\");}}},{key:\"render\",value:function render(){var _this2=this;setInterval(function(){return _this2.changeViewPort(_this2.props.area);},2000);return/*#__PURE__*/React.createElement(Map,{id:\"map\",onViewportChanged:this.onViewportChanged,viewport:this.state.viewport},/*#__PURE__*/React.createElement(LayersControl,{position:\"topleft\"},/*#__PURE__*/React.createElement(Control,{position:\"topleft\"},/*#__PURE__*/React.createElement(\"button\",{className:\"leaflet-control-layers feat-btn-reset-view\",onClick:this.resetView},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faDotCircle,size:\"lg\"}))),/*#__PURE__*/React.createElement(LayersControl.BaseLayer,{checked:\"checked\",name:\"Black and White\"},/*#__PURE__*/React.createElement(TileLayer,{attribution:\"&copy <a href=\\\"http://osm.org/copyright\\\"> OpenStreetMap</a> contributors\",url:\"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"})),/*#__PURE__*/React.createElement(LayersControl.BaseLayer,{name:\"Colored\"},/*#__PURE__*/React.createElement(TileLayer,{attribution:\"&copy <a href=\\\"http://osm.org/copyright\\\"> OpenStreetMap</a> contributors\",url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"}))),/*#__PURE__*/React.createElement(LayerGroup,null,/*#__PURE__*/React.createElement(GeoJSON,{test:console.log(\"Geo: \"+this.state.currentArea),key:this.state.currentArea,data:INDEX_DATA[this.state.currentArea],style:function style(feature){return{color:'#4a83ec',weight:0.5,fillColor:_this2.getColor(feature['properties'][_this2.state.selectedContentId]),fillOpacity:0.85};}}),/*#__PURE__*/React.createElement(Marker,{position:[50,10]},/*#__PURE__*/React.createElement(Popup,null,\"Popup for any custom information.\"))),/*#__PURE__*/React.createElement(LayerGroup,null,this.state.selectedActivity?ACTIVITY_DATA[this.state.currentArea].map(function(city,k){return/*#__PURE__*/React.createElement(CircleMarker,{color:\"#dbae28\",key:k,center:[city[\"point\"][1],city[\"point\"][0]]//radius={5 * Math.log(city[this.state.selected] / 100000)}\n,radius:5*Math.log(city[_this2.state.selectedActivity+\"_total\"]),fillOpacity:0.3,stroke:true,weight:2},/*#__PURE__*/React.createElement(Tooltip,{direction:\"right\",offset:[-8,-2],opacity:1},/*#__PURE__*/React.createElement(\"strong\",null,city[\"name\"],\": \"),/*#__PURE__*/React.createElement(\"span\",null,parseInt(city[_this2.state.selectedActivity+\"_total\"]).toLocaleString(\"en-AU\"),\" (\",+(Math.round(city[_this2.state.selectedActivity]+\"e+3\")+\"e-3\"),\"%)\")));}):/*#__PURE__*/React.createElement(React.Fragment,null)),this.state.selectedContent?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Legend,{getColor:this.getColor}),/*#__PURE__*/React.createElement(Control,{position:\"bottomright\"},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(\"strong\",null,this.state.selectedContent?this.state.selectedContent[\"text\"]:\"\",\" \")))):/*#__PURE__*/React.createElement(React.Fragment,null),/*#__PURE__*/React.createElement(Control,{position:\"topright\"},/*#__PURE__*/React.createElement(ButtonGroup,{toggle:true},layers.map(function(layer){return/*#__PURE__*/React.createElement(LayerChooser,{layer:layer,key:layer.id,variant:layer.variant,className:layer.className,selectLayer:_this2.selectLayer});})),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null)),/*#__PURE__*/React.createElement(Control,{position:\"topright\"},/*#__PURE__*/React.createElement(ButtonGroup,{vertical:true},activities.map(function(activity){return/*#__PURE__*/React.createElement(ActivityChooser,{activity:activity,key:activity.id,selectActivity:_this2.setSelectedActivity});}))));}}]);return MainMap;}(Component);export default MainMap;","map":{"version":3,"sources":["/home/tanto/Courses/CCC/Learns/react/ausmap/src/components/MainMap.js"],"names":["React","Component","Control","Map","TileLayer","GeoJSON","Marker","Popup","CircleMarker","Tooltip","LayersControl","LayerGroup","Circle","library","FontAwesomeIcon","faDotCircle","faRunning","faGamepad","faLaptopHouse","faHamburger","faFilm","faChartPie","faPeopleCarry","nswSummary","auSummary","ButtonGroup","auIndex","nswIndex","activities","layers","LayerChooser","ActivityChooser","Legend","add","ACTIVITY_DATA","INDEX_DATA","INDEX_LAYER","legendTitle","data","DEFAULT_ZOOM_LEVEL","DEFAULT_CENTER","DEFAULT_VIEWPORT","center","zoom","layerStyle","display","float","colors0","colors1","COLORS","getColor0","d","idx","color","Math","floor","random","length","getColor01","layerId","console","log","MainMap","state","viewport","props","vp","selectedActivity","selectedContentId","selectedContent","currentArea","getColor","resetView","setState","onViewportChanged","setSelectedActivity","activity","selectLayer","content","id","area","setInterval","changeViewPort","feature","weight","fillColor","fillOpacity","map","city","k","parseInt","toLocaleString","round","layer","variant","className"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Control from 'react-leaflet-control';\nimport { Map, TileLayer,  GeoJSON, Marker, Popup, CircleMarker, Tooltip,\n  LayersControl, LayerGroup, Circle } from 'react-leaflet';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDotCircle } from '@fortawesome/free-regular-svg-icons';\nimport { faRunning, faGamepad, faLaptopHouse, faHamburger, faFilm, faChartPie,\n  faPeopleCarry } from '@fortawesome/free-solid-svg-icons';\n\n//TODO: change to list\n//import cities from '../cities.json';\nimport nswSummary from '../data/nsw-summary.json';\nimport auSummary from '../data/au-summary.json';\n\nimport { ButtonGroup } from 'react-bootstrap';\n//import aus from '../aus.json';\n\nimport auIndex from '../data/au-index.json';\nimport nswIndex from '../data/nsw-index.json';\n//import aus from '../data/data6207385239988214929.json';\n\nimport activities from '../activities.json';\nimport layers from '../layers.json';\nimport LayerChooser from './LayerChooser';\nimport ActivityChooser from './ActivityChooser';\nimport Legend from \"./Legend\";\n\nlibrary.add(faDotCircle, faRunning, faGamepad, faLaptopHouse, faHamburger,\n  faFilm, faChartPie, faPeopleCarry); \n\nconst ACTIVITY_DATA = {\n  \"au\": auSummary,\n  \"nsw\": nswSummary\n}\n\nconst INDEX_DATA = {\n  \"au\": auIndex,\n  \"nsw\": nswIndex\n}\n\nconst INDEX_LAYER = {\n  0: {legendTitle: \"Employment ratio (%)\", data: 'occ_labours'}, \n  1: {legendTitle: \"Education ratio (%)\", data: 'edu_secondary'},\n  2: {legendTitle: \"Income average ($1000)\", data: 'mean_income'}\n}\n\nconst DEFAULT_ZOOM_LEVEL = 9; // Greater Sydney zoom level\nconst DEFAULT_CENTER = [-33.834905,150.9673231]; // Greater Sidney center\n\n//const DEFAULT_ZOOM_LEVEL = 5; // Australia zoom level\n//const DEFAULT_CENTER =  = [-25.6101111,134.3547222] // Australia center\nconst DEFAULT_VIEWPORT = {\n  center: DEFAULT_CENTER,\n  zoom: DEFAULT_ZOOM_LEVEL\n}\n\n//https://data.gov.au/geoserver/nsw-suburb-locality-boundaries-psma-administrative-boundaries/wfs?request=GetFeature&typeName=ckan_91e70237_d9d1_4719_a82f_e71b811154c6&outputFormat=json\n\nconst layerStyle = {\n  display: 'none',\n  float: 'right'\n}\n\nconst colors0 = ['#f7fcf5','#e5f5e0','#c7e9c0','#a1d99b', '#74c476','#41ab5d',\n                '#238b45', '#005a32'];\nconst colors1 = ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913',\n                '#d94801', '#a63603', '#7f2704', '#671f03']\nconst COLORS = ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6',\n                '#2171b5', '#08519c', '#08306b', '#05234d']\n\nfunction getColor0(d, idx) { // TODO: Replace with the real implementation\n   // let color = (90 - d['properties']['Name'].toUpperCase().codePointAt(idx)) % 8;\n  let color = Math.floor(Math.random() * Math.floor(COLORS.length));\n  return COLORS[color];\n}\n\nconst getColor01 = (layerId, d) => {\n  //layerId === 2\n  //  ? d = d / 1000\n  //  : d = d * 100\n  d = d/1000;\n\n  console.log('color: '+d)\n  return d > 90\n    ? COLORS[9]\n    : d > 80\n    ? COLORS[8]\n    : d > 70\n    ? COLORS[7]\n    : d > 60\n    ? COLORS[6]\n    : d > 50\n    ? COLORS[5]\n    : d > 40\n    ? COLORS[4]\n    : d > 30\n    ? COLORS[3]\n    : d > 20\n    ? COLORS[2]\n    : d > 10\n    ? COLORS[1]\n    : COLORS[0];\n};\n\nclass MainMap extends Component {\n  state = {\n    viewport: this.props.vp,\n    selectedActivity: null,\n//    selectedData: nswIndex,\n    selectedContentId: 0,\n    selectedContent: null,\n    currentArea: \"nsw\",\n//    activityData: ACTIVITY_DATA[\"nsw\"],\n//    indexData: INDEX_DATA[\"nsw\"]\n  }\n\n  getColor = (d) => {\n    //layerId === 2\n    //  ? d = d / 1000\n    //  : d = d * 100\n    d = d/1000;\n  \n    console.log('color: '+d)\n    return d > 90\n      ? COLORS[9]\n      : d > 80\n      ? COLORS[8]\n      : d > 70\n      ? COLORS[7]\n      : d > 60\n      ? COLORS[6]\n      : d > 50\n      ? COLORS[5]\n      : d > 40\n      ? COLORS[4]\n      : d > 30\n      ? COLORS[3]\n      : d > 20\n      ? COLORS[2]\n      : d > 10\n      ? COLORS[1]\n      : COLORS[0];\n  };\n\n  resetView = () => {\n    console.log(this.props.vp)\n    this.setState({ viewport: this.props.vp })\n  }\n\n  onViewportChanged = (viewport) => {\n    this.setState({ viewport })\n  }\n\n  setSelectedActivity = (activity) => {\n    console.log(\"selectActiviy: \"+activity)\n    this.setState({ selectedActivity: activity })\n  }\n\n  changeViewPort(area) {\n    console.log(\"area: \"+area)\n    if(this.state.currentArea !== area ) {\n      this.setState({ currentArea:area })\n  //    this.state.activityData = ACTIVITY_DATA[area]\n  //    this.state.indexData = INDEX_DATA[area]\n      this.resetView()\n      console.log(\"reset\")\n    }\n  }\n\n  selectLayer = (content) => {\n    console.log(this.state.currentArea+\" :id:\"+content.id+\"->\")\n    this.setState({ selectedContentId:content.id,\n                    selectedContent:content })\n  }\n\n  render() {\n    setInterval(() => this.changeViewPort(this.props.area), 2000);\n    return (\n        <Map id=\"map\" onViewportChanged={this.onViewportChanged}\n          viewport={this.state.viewport}>\n          <LayersControl position=\"topleft\">\n          <Control position=\"topleft\">\n            <button\n              className=\"leaflet-control-layers feat-btn-reset-view\"\n              onClick={ this.resetView }\n            >\n          <FontAwesomeIcon icon={ faDotCircle } size=\"lg\"/>\n          </button>\n          </Control>\n          <LayersControl.BaseLayer\n            checked=\"checked\"\n            name=\"Black and White\">\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">\n                OpenStreetMap</a> contributors'\n              url=\"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"\n              />\n            </LayersControl.BaseLayer>\n          <LayersControl.BaseLayer\n            name=\"Colored\">\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">\n                OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n          </LayersControl.BaseLayer>\n          </LayersControl>\n          <LayerGroup>\n            <GeoJSON test={console.log(\"Geo: \"+this.state.currentArea)}\n              key={this.state.currentArea}\n              data={INDEX_DATA[this.state.currentArea]}\n              style={(feature) => ({\n              color: '#4a83ec',\n              weight: 0.5,\n              fillColor: this.getColor(feature['properties'][this.state.selectedContentId]),\n              fillOpacity: 0.85\n            })}\n          />\n          <Marker position={[50, 10]}>\n            <Popup>\n              Popup for any custom information.\n            </Popup>\n          </Marker>\n          </LayerGroup>\n          <LayerGroup>\n          {this.state.selectedActivity? (\n          ACTIVITY_DATA[this.state.currentArea].map((city, k) => {\n              return (\n                <CircleMarker\n                  color=\"#dbae28\"\n                  key={k}\n                  center={[city[\"point\"][1], city[\"point\"][0]]}\n                  //radius={5 * Math.log(city[this.state.selected] / 100000)}\n                  radius={5 * Math.log(city[this.state.selectedActivity+\"_total\"])}\n                  fillOpacity={0.3}\n                  stroke={true}\n                  weight={2}\n                >\n                  <Tooltip direction=\"right\" offset={[-8, -2]} opacity={1}>\n                    <strong>{city[\"name\"]}: </strong>\n                    <span>{ parseInt(city[this.state.selectedActivity+\"_total\"]).toLocaleString(\"en-AU\")} ({+(Math.round(city[this.state.selectedActivity]+\"e+3\") + \"e-3\")}%)</span>\n                  </Tooltip>\n                </CircleMarker>\n              );\n            })):(<></>)}\n            </LayerGroup>\n            {this.state.selectedContent ? (\n              <>\n          <Legend getColor={this.getColor} />\n          <Control position=\"bottomright\" >\n            <span><strong>{this.state.selectedContent  ? this.state.selectedContent[\"text\"] : \"\"} </strong></span>  \n          </Control>\n          </>\n            ):(<></>)}\n\n          <Control position=\"topright\" >\n            <ButtonGroup toggle>\n              {layers.map(layer => (\n                  <LayerChooser layer={layer} key={layer.id} variant={layer.variant} className={layer.className} selectLayer={this.selectLayer} />\n              ))}\n            </ButtonGroup>\n            <br/><br/><br/>\n          </Control>\n          <Control position=\"topright\" >\n            <ButtonGroup vertical>\n              {activities.map(activity => (\n                <ActivityChooser\n                  activity={activity}\n                  key={activity.id}\n                   selectActivity={this.setSelectedActivity}\n                />\n             ))}\n            </ButtonGroup>\n          </Control>\n\n        </Map>\n      \n    );\n  }\n}\n\nexport default MainMap;\n"]},"metadata":{},"sourceType":"module"}