{"ast":null,"code":"import { MapControl, withLeaflet } from \"react-leaflet\";\nimport L from \"leaflet\"; //const colors = ['#f7fcf5','#e5f5e0','#c7e9c0','#a1d99b', '#74c476','#41ab5d',\n//                '#238b45', '#005a32'];\n\nconst colors = ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'];\n\nclass Legend extends MapControl {\n  createLeafletElement(props) {}\n\n  componentDidMount() {\n    // get color depending on population density value\n    const getColor = d => {\n      return d > 90 ? colors[8] : d > 80 ? colors[7] : d > 70 ? colors[6] : d > 60 ? colors[5] : d > 50 ? colors[4] : d > 40 ? colors[3] : d > 30 ? colors[2] : d > 20 ? colors[1] : colors[0];\n    };\n\n    const legend = L.control({\n      position: \"bottomright\"\n    });\n\n    legend.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"info legend\");\n      const grades = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90];\n      let labels = [];\n      let from;\n      let to; //labels.push(\"<strong>\"+this.props.title+\"</strong>\")\n      //labels.push(this.props.desc)\n\n      for (let i = 0; i < grades.length; i++) {\n        from = grades[i];\n        to = grades[i + 1];\n        labels.push('<i style=\"opacity: 0.6;background:' + getColor(from + 1) + '\">&nbsp; &nbsp; &nbsp;</i> ' + from + (to ? \"&ndash;\" + to : \"+\"));\n      }\n\n      div.innerHTML = labels.join(\"<br>\");\n      return div;\n    };\n\n    const {\n      map\n    } = this.props.leaflet;\n    legend.addTo(map);\n  }\n\n}\n\nexport default withLeaflet(Legend);","map":{"version":3,"sources":["/home/tanto/Courses/CCC/Learns/react/ausmap/src/components/Legend.js"],"names":["MapControl","withLeaflet","L","colors","Legend","createLeafletElement","props","componentDidMount","getColor","d","legend","control","position","onAdd","div","DomUtil","create","grades","labels","from","to","i","length","push","innerHTML","join","map","leaflet","addTo"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,QAAwC,eAAxC;AACA,OAAOC,CAAP,MAAc,SAAd,C,CAGA;AACA;;AACA,MAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EACC,SADD,EACY,SADZ,EACuB,SADvB,CAAf;;AAGA,MAAMC,MAAN,SAAqBJ,UAArB,CAAgC;AAC9BK,EAAAA,oBAAoB,CAACC,KAAD,EAAQ,CAAE;;AAC9BC,EAAAA,iBAAiB,GAAG;AAClB;AACA,UAAMC,QAAQ,GAAGC,CAAC,IAAI;AACpB,aAAOA,CAAC,GAAG,EAAJ,GACHN,MAAM,CAAC,CAAD,CADH,GAEHM,CAAC,GAAG,EAAJ,GACAN,MAAM,CAAC,CAAD,CADN,GAEAM,CAAC,GAAG,EAAJ,GACAN,MAAM,CAAC,CAAD,CADN,GAEAM,CAAC,GAAG,EAAJ,GACAN,MAAM,CAAC,CAAD,CADN,GAEAM,CAAC,GAAG,EAAJ,GACAN,MAAM,CAAC,CAAD,CADN,GAEAM,CAAC,GAAG,EAAJ,GACAN,MAAM,CAAC,CAAD,CADN,GAEAM,CAAC,GAAG,EAAJ,GACAN,MAAM,CAAC,CAAD,CADN,GAEAM,CAAC,GAAG,EAAJ,GACAN,MAAM,CAAC,CAAD,CADN,GAEAA,MAAM,CAAC,CAAD,CAhBV;AAiBD,KAlBD;;AAoBA,UAAMO,MAAM,GAAGR,CAAC,CAACS,OAAF,CAAU;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAV,CAAf;;AAEAF,IAAAA,MAAM,CAACG,KAAP,GAAe,MAAM;AACnB,YAAMC,GAAG,GAAGZ,CAAC,CAACa,OAAF,CAAUC,MAAV,CAAiB,KAAjB,EAAwB,aAAxB,CAAZ;AACA,YAAMC,MAAM,GAAG,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,CAAf;AACA,UAAIC,MAAM,GAAG,EAAb;AACA,UAAIC,IAAJ;AACA,UAAIC,EAAJ,CALmB,CAOnB;AACA;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACK,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtCF,QAAAA,IAAI,GAAGF,MAAM,CAACI,CAAD,CAAb;AACAD,QAAAA,EAAE,GAAGH,MAAM,CAACI,CAAC,GAAG,CAAL,CAAX;AAEAH,QAAAA,MAAM,CAACK,IAAP,CACE,uCACEf,QAAQ,CAACW,IAAI,GAAG,CAAR,CADV,GAEE,6BAFF,GAGEA,IAHF,IAIGC,EAAE,GAAG,YAAYA,EAAf,GAAoB,GAJzB,CADF;AAOD;;AAEDN,MAAAA,GAAG,CAACU,SAAJ,GAAgBN,MAAM,CAACO,IAAP,CAAY,MAAZ,CAAhB;AACA,aAAOX,GAAP;AACD,KAxBD;;AA0BA,UAAM;AAAEY,MAAAA;AAAF,QAAU,KAAKpB,KAAL,CAAWqB,OAA3B;AACAjB,IAAAA,MAAM,CAACkB,KAAP,CAAaF,GAAb;AACD;;AAtD6B;;AAyDhC,eAAezB,WAAW,CAACG,MAAD,CAA1B","sourcesContent":["import { MapControl, withLeaflet } from \"react-leaflet\";\nimport L from \"leaflet\";\n\n\n//const colors = ['#f7fcf5','#e5f5e0','#c7e9c0','#a1d99b', '#74c476','#41ab5d',\n//                '#238b45', '#005a32'];\nconst colors = ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913',\n                '#d94801', '#a63603', '#7f2704']\n\nclass Legend extends MapControl {\n  createLeafletElement(props) {}\n  componentDidMount() {\n    // get color depending on population density value\n    const getColor = d => {\n      return d > 90\n        ? colors[8]\n        : d > 80\n        ? colors[7]\n        : d > 70\n        ? colors[6]\n        : d > 60\n        ? colors[5]\n        : d > 50\n        ? colors[4]\n        : d > 40\n        ? colors[3]\n        : d > 30\n        ? colors[2]\n        : d > 20\n        ? colors[1]\n        : colors[0];\n    };\n\n    const legend = L.control({ position: \"bottomright\" });\n\n    legend.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"info legend\");\n      const grades = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90];\n      let labels = [];\n      let from;\n      let to;\n\n      //labels.push(\"<strong>\"+this.props.title+\"</strong>\")\n      //labels.push(this.props.desc)\n      for (let i = 0; i < grades.length; i++) {\n        from = grades[i];\n        to = grades[i + 1];\n\n        labels.push(\n          '<i style=\"opacity: 0.6;background:' +\n            getColor(from + 1) +\n            '\">&nbsp; &nbsp; &nbsp;</i> ' +\n            from +\n            (to ? \"&ndash;\" + to : \"+\")\n        );\n      }\n\n      div.innerHTML = labels.join(\"<br>\");\n      return div;\n    };\n\n    const { map } = this.props.leaflet;\n    legend.addTo(map);\n  }\n}\n\nexport default withLeaflet(Legend);\n"]},"metadata":{},"sourceType":"module"}