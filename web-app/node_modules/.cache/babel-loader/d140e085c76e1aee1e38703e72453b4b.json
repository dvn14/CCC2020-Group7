{"ast":null,"code":"import _classCallCheck from\"/mnt/tanto/Courses/CCC/Learns/react/ausmap-cdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/mnt/tanto/Courses/CCC/Learns/react/ausmap-cdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/mnt/tanto/Courses/CCC/Learns/react/ausmap-cdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/mnt/tanto/Courses/CCC/Learns/react/ausmap-cdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{MapControl,withLeaflet}from\"react-leaflet\";import L from\"leaflet\";import PropTypes from\"prop-types\";var Legend=/*#__PURE__*/function(_MapControl){_inherits(Legend,_MapControl);var _super=_createSuper(Legend);function Legend(){_classCallCheck(this,Legend);return _super.apply(this,arguments);}_createClass(Legend,[{key:\"createLeafletElement\",value:function createLeafletElement(props){}},{key:\"componentDidMount\",value:function componentDidMount(){var _this=this;var LOCALE=\"en-AU\";var box=L.control({position:this.props.position});box.onAdd=function(){var div=L.DomUtil.create(\"div\",\"legend\");var values=[];for(var i=0;i<_this.props.levels.length;i++){var start=_this.props.levels[i];var end=_this.props.levels[i+1];var value=\"<span style='opacity: 0.85; background:\"+_this.props.getColor(start+1)+\"'>&nbsp; &nbsp; &nbsp;</span> \"+parseInt(start).toLocaleString(LOCALE)+(end?\"&ndash;\"+parseInt(end).toLocaleString(LOCALE):\"+\");values.push(value);}div.innerHTML=values.join(\"<br/>\");return div;};box.addTo(this.props.leaflet.map);}}]);return Legend;}(MapControl);Legend.propTypes={colors:PropTypes.array.isRequired,levels:PropTypes.array.isRequired,position:PropTypes.string.isRequired};export default withLeaflet(Legend);","map":{"version":3,"sources":["/mnt/tanto/Courses/CCC/Learns/react/ausmap-cdb/src/components/Legend.js"],"names":["MapControl","withLeaflet","L","PropTypes","Legend","props","LOCALE","box","control","position","onAdd","div","DomUtil","create","values","i","levels","length","start","end","value","getColor","parseInt","toLocaleString","push","innerHTML","join","addTo","leaflet","map","propTypes","colors","array","isRequired","string"],"mappings":"ooBAAA,OAASA,UAAT,CAAqBC,WAArB,KAAwC,eAAxC,CACA,MAAOC,CAAAA,CAAP,KAAc,SAAd,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,C,GAEMC,CAAAA,M,2QACiBC,K,CAAO,CAAE,C,6DAEV,gBAClB,GAAMC,CAAAA,MAAM,CAAG,OAAf,CACA,GAAMC,CAAAA,GAAG,CAAGL,CAAC,CAACM,OAAF,CAAU,CAAEC,QAAQ,CAAE,KAAKJ,KAAL,CAAWI,QAAvB,CAAV,CAAZ,CAEAF,GAAG,CAACG,KAAJ,CAAY,UAAM,CAChB,GAAMC,CAAAA,GAAG,CAAGT,CAAC,CAACU,OAAF,CAAUC,MAAV,CAAiB,KAAjB,CAAwB,QAAxB,CAAZ,CACA,GAAIC,CAAAA,MAAM,CAAG,EAAb,CAEA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,KAAI,CAACV,KAAL,CAAWW,MAAX,CAAkBC,MAAtC,CAA8CF,CAAC,EAA/C,CAAmD,CACjD,GAAIG,CAAAA,KAAK,CAAG,KAAI,CAACb,KAAL,CAAWW,MAAX,CAAkBD,CAAlB,CAAZ,CACA,GAAII,CAAAA,GAAG,CAAG,KAAI,CAACd,KAAL,CAAWW,MAAX,CAAkBD,CAAC,CAAG,CAAtB,CAAV,CACA,GAAIK,CAAAA,KAAK,CAAG,0CACR,KAAI,CAACf,KAAL,CAAWgB,QAAX,CAAoBH,KAAK,CAAG,CAA5B,CADQ,CAER,gCAFQ,CAGRI,QAAQ,CAACJ,KAAD,CAAR,CAAgBK,cAAhB,CAA+BjB,MAA/B,CAHQ,EAIPa,GAAG,CACJ,UAAYG,QAAQ,CAACH,GAAD,CAAR,CAAcI,cAAd,CAA6BjB,MAA7B,CADR,CAC+C,GAL3C,CAAZ,CAOAQ,MAAM,CAACU,IAAP,CAAYJ,KAAZ,EACD,CAEDT,GAAG,CAACc,SAAJ,CAAgBX,MAAM,CAACY,IAAP,CAAY,OAAZ,CAAhB,CACA,MAAOf,CAAAA,GAAP,CACD,CAnBD,CAqBAJ,GAAG,CAACoB,KAAJ,CAAU,KAAKtB,KAAL,CAAWuB,OAAX,CAAmBC,GAA7B,EACD,C,oBA7BkB7B,U,EAgCrBI,MAAM,CAAC0B,SAAP,CAAmB,CACjBC,MAAM,CAAE5B,SAAS,CAAC6B,KAAV,CAAgBC,UADP,CAEjBjB,MAAM,CAAEb,SAAS,CAAC6B,KAAV,CAAgBC,UAFP,CAGjBxB,QAAQ,CAAEN,SAAS,CAAC+B,MAAV,CAAiBD,UAHV,CAAnB,CAMA,cAAehC,CAAAA,WAAW,CAACG,MAAD,CAA1B","sourcesContent":["import { MapControl, withLeaflet } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport PropTypes from \"prop-types\";\n\nclass Legend extends MapControl {\n  createLeafletElement(props) {}\n\n  componentDidMount() {\n    const LOCALE = \"en-AU\";\n    const box = L.control({ position: this.props.position });\n\n    box.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"legend\");\n      let values = [];\n      \n      for (let i = 0; i < this.props.levels.length; i++) {\n        let start = this.props.levels[i];\n        let end = this.props.levels[i + 1];\n        let value = \"<span style='opacity: 0.85; background:\" +\n            this.props.getColor(start + 1) +\n            \"'>&nbsp; &nbsp; &nbsp;</span> \" +\n            parseInt(start).toLocaleString(LOCALE) +\n            (end ?\n            \"&ndash;\" + parseInt(end).toLocaleString(LOCALE) : \"+\")\n\n        values.push(value);\n      }\n\n      div.innerHTML = values.join(\"<br/>\");\n      return div;\n    };\n    \n    box.addTo(this.props.leaflet.map);\n  }\n}\n\nLegend.propTypes = {\n  colors: PropTypes.array.isRequired,\n  levels: PropTypes.array.isRequired,\n  position: PropTypes.string.isRequired\n}\n\nexport default withLeaflet(Legend);\n"]},"metadata":{},"sourceType":"module"}