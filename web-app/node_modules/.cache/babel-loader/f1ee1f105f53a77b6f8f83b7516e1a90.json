{"ast":null,"code":"import { MapControl, withLeaflet } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nclass Legend extends MapControl {\n  createLeafletElement(props) {}\n\n  componentDidMount() {\n    const LOCALE = \"en-AU\";\n    const box = L.control({\n      position: \"bottomleft\"\n    });\n\n    box.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"legend\");\n      let values = [];\n\n      for (let i = 0; i < this.props.levels.length; i++) {\n        let start = this.props.levels[i];\n        let end = this.props.levels[i + 1];\n        values.push('<i style=\"opacity: 0.85;background:' + this.props.getColor(start + 1) + '\">&nbsp; &nbsp; &nbsp;</i> ' + parseInt(start).toLocaleString(LOCALE) + (end ? \"&ndash;\" + parseInt(end).toLocaleString(LOCALE) : \"+\"));\n      }\n\n      div.innerHTML = values.join(\"<br/>\");\n      return div;\n    };\n\n    box.addTo(this.props.leaflet.map);\n  }\n\n}\n\nexport default withLeaflet(Legend);","map":{"version":3,"sources":["/mnt/tanto/Courses/CCC/Learns/react/ausmap-cdb/src/components/Legend.js"],"names":["MapControl","withLeaflet","L","Legend","createLeafletElement","props","componentDidMount","LOCALE","box","control","position","onAdd","div","DomUtil","create","values","i","levels","length","start","end","push","getColor","parseInt","toLocaleString","innerHTML","join","addTo","leaflet","map"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,QAAwC,eAAxC;AACA,OAAOC,CAAP,MAAc,SAAd;;AAEA,MAAMC,MAAN,SAAqBH,UAArB,CAAgC;AAC9BI,EAAAA,oBAAoB,CAACC,KAAD,EAAQ,CAAE;;AAE9BC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,MAAM,GAAG,OAAf;AACA,UAAMC,GAAG,GAAGN,CAAC,CAACO,OAAF,CAAU;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAV,CAAZ;;AAEAF,IAAAA,GAAG,CAACG,KAAJ,GAAY,MAAM;AAChB,YAAMC,GAAG,GAAGV,CAAC,CAACW,OAAF,CAAUC,MAAV,CAAiB,KAAjB,EAAwB,QAAxB,CAAZ;AACA,UAAIC,MAAM,GAAG,EAAb;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKX,KAAL,CAAWY,MAAX,CAAkBC,MAAtC,EAA8CF,CAAC,EAA/C,EAAmD;AACjD,YAAIG,KAAK,GAAG,KAAKd,KAAL,CAAWY,MAAX,CAAkBD,CAAlB,CAAZ;AACA,YAAII,GAAG,GAAG,KAAKf,KAAL,CAAWY,MAAX,CAAkBD,CAAC,GAAG,CAAtB,CAAV;AAEAD,QAAAA,MAAM,CAACM,IAAP,CACE,wCACE,KAAKhB,KAAL,CAAWiB,QAAX,CAAoBH,KAAK,GAAG,CAA5B,CADF,GAEE,6BAFF,GAGEI,QAAQ,CAACJ,KAAD,CAAR,CAAgBK,cAAhB,CAA+BjB,MAA/B,CAHF,IAIGa,GAAG,GACH,YAAYG,QAAQ,CAACH,GAAD,CAAR,CAAcI,cAAd,CAA6BjB,MAA7B,CADT,GACgD,GALtD,CADF;AAQD;;AAEDK,MAAAA,GAAG,CAACa,SAAJ,GAAgBV,MAAM,CAACW,IAAP,CAAY,OAAZ,CAAhB;AACA,aAAOd,GAAP;AACD,KApBD;;AAsBAJ,IAAAA,GAAG,CAACmB,KAAJ,CAAU,KAAKtB,KAAL,CAAWuB,OAAX,CAAmBC,GAA7B;AACD;;AA9B6B;;AAiChC,eAAe5B,WAAW,CAACE,MAAD,CAA1B","sourcesContent":["import { MapControl, withLeaflet } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nclass Legend extends MapControl {\n  createLeafletElement(props) {}\n\n  componentDidMount() {\n    const LOCALE = \"en-AU\";\n    const box = L.control({ position: \"bottomleft\" });\n\n    box.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"legend\");\n      let values = [];\n      \n      for (let i = 0; i < this.props.levels.length; i++) {\n        let start = this.props.levels[i];\n        let end = this.props.levels[i + 1];\n\n        values.push(\n          '<i style=\"opacity: 0.85;background:' +\n            this.props.getColor(start + 1) +\n            '\">&nbsp; &nbsp; &nbsp;</i> ' +\n            parseInt(start).toLocaleString(LOCALE) +\n            (end ?\n             \"&ndash;\" + parseInt(end).toLocaleString(LOCALE) : \"+\")\n        );\n      }\n\n      div.innerHTML = values.join(\"<br/>\");\n      return div;\n    };\n    \n    box.addTo(this.props.leaflet.map);\n  }\n}\n\nexport default withLeaflet(Legend);\n"]},"metadata":{},"sourceType":"module"}