{"ast":null,"code":"import _classCallCheck from\"/home/tanto/Courses/CCC/Learns/react/ausmap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/tanto/Courses/CCC/Learns/react/ausmap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/tanto/Courses/CCC/Learns/react/ausmap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/tanto/Courses/CCC/Learns/react/ausmap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{MapControl,withLeaflet}from\"react-leaflet\";import L from\"leaflet\";var Legend=/*#__PURE__*/function(_MapControl){_inherits(Legend,_MapControl);var _super=_createSuper(Legend);function Legend(){_classCallCheck(this,Legend);return _super.apply(this,arguments);}_createClass(Legend,[{key:\"createLeafletElement\",value:function createLeafletElement(props){}},{key:\"componentDidMount\",value:function componentDidMount(){var _this=this;var LOCALE=\"en-AU\";var legend=L.control({position:\"bottomright\"});legend.onAdd=function(){var div=L.DomUtil.create(\"div\",\"info legend\");var grades=[0,10000,20000,30000,40000,50000,60000,70000,80000,90000];var labels=[];var from;var to;//labels.push(\"<strong>\"+this.props.title+\"</strong>\")\n//labels.push(this.props.desc)\nfor(var i=0;i<grades.length;i++){from=grades[i];to=grades[i+1];labels.push('<i style=\"opacity: 0.85;background:'+_this.props.getColor(from+1)+'\">&nbsp; &nbsp; &nbsp;</i> '+parseInt(from).toLocaleString(LOCALE)+(to?\"&ndash;\"+parseInt(to).toLocaleString(LOCALE):\"+\"));}div.innerHTML=labels.join(\"<br>\");return div;};var map=this.props.leaflet.map;legend.addTo(map);}}]);return Legend;}(MapControl);export default withLeaflet(Legend);","map":{"version":3,"sources":["/home/tanto/Courses/CCC/Learns/react/ausmap/src/components/Legend.js"],"names":["MapControl","withLeaflet","L","Legend","props","LOCALE","legend","control","position","onAdd","div","DomUtil","create","grades","labels","from","to","i","length","push","getColor","parseInt","toLocaleString","innerHTML","join","map","leaflet","addTo"],"mappings":"wnBAAA,OAASA,UAAT,CAAqBC,WAArB,KAAwC,eAAxC,CACA,MAAOC,CAAAA,CAAP,KAAc,SAAd,C,GAEMC,CAAAA,M,2QACiBC,K,CAAO,CAAE,C,6DACV,gBAElB,GAAMC,CAAAA,MAAM,CAAG,OAAf,CACA,GAAMC,CAAAA,MAAM,CAAGJ,CAAC,CAACK,OAAF,CAAU,CAAEC,QAAQ,CAAE,aAAZ,CAAV,CAAf,CAEAF,MAAM,CAACG,KAAP,CAAe,UAAM,CACnB,GAAMC,CAAAA,GAAG,CAAGR,CAAC,CAACS,OAAF,CAAUC,MAAV,CAAiB,KAAjB,CAAwB,aAAxB,CAAZ,CACA,GAAMC,CAAAA,MAAM,CAAG,CAAC,CAAD,CAAI,KAAJ,CAAW,KAAX,CAAkB,KAAlB,CAAyB,KAAzB,CAAgC,KAAhC,CAAuC,KAAvC,CAA8C,KAA9C,CAAqD,KAArD,CAA4D,KAA5D,CAAf,CACA,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACA,GAAIC,CAAAA,IAAJ,CACA,GAAIC,CAAAA,EAAJ,CAEA;AACA;AACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGJ,MAAM,CAACK,MAA3B,CAAmCD,CAAC,EAApC,CAAwC,CACtCF,IAAI,CAAGF,MAAM,CAACI,CAAD,CAAb,CACAD,EAAE,CAAGH,MAAM,CAACI,CAAC,CAAG,CAAL,CAAX,CAEAH,MAAM,CAACK,IAAP,CACE,sCACE,KAAI,CAACf,KAAL,CAAWgB,QAAX,CAAoBL,IAAI,CAAG,CAA3B,CADF,CAEE,6BAFF,CAGEM,QAAQ,CAACN,IAAD,CAAR,CAAeO,cAAf,CAA8BjB,MAA9B,CAHF,EAIGW,EAAE,CACF,UAAYK,QAAQ,CAACL,EAAD,CAAR,CAAaM,cAAb,CAA4BjB,MAA5B,CADV,CACgD,GALrD,CADF,EAQD,CAEDK,GAAG,CAACa,SAAJ,CAAgBT,MAAM,CAACU,IAAP,CAAY,MAAZ,CAAhB,CACA,MAAOd,CAAAA,GAAP,CACD,CAzBD,CALkB,GAgCVe,CAAAA,GAhCU,CAgCF,KAAKrB,KAAL,CAAWsB,OAhCT,CAgCVD,GAhCU,CAiClBnB,MAAM,CAACqB,KAAP,CAAaF,GAAb,EACD,C,oBApCkBzB,U,EAuCrB,cAAeC,CAAAA,WAAW,CAACE,MAAD,CAA1B","sourcesContent":["import { MapControl, withLeaflet } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nclass Legend extends MapControl {\n  createLeafletElement(props) {}\n  componentDidMount() {\n\n    const LOCALE = \"en-AU\";\n    const legend = L.control({ position: \"bottomright\" });\n\n    legend.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"info legend\");\n      const grades = [0, 10000, 20000, 30000, 40000, 50000, 60000, 70000, 80000, 90000];\n      let labels = [];\n      let from;\n      let to;\n\n      //labels.push(\"<strong>\"+this.props.title+\"</strong>\")\n      //labels.push(this.props.desc)\n      for (let i = 0; i < grades.length; i++) {\n        from = grades[i];\n        to = grades[i + 1];\n\n        labels.push(\n          '<i style=\"opacity: 0.85;background:' +\n            this.props.getColor(from + 1) +\n            '\">&nbsp; &nbsp; &nbsp;</i> ' +\n            parseInt(from).toLocaleString(LOCALE) +\n            (to ?\n             \"&ndash;\" + parseInt(to).toLocaleString(LOCALE) : \"+\")\n        );\n      }\n\n      div.innerHTML = labels.join(\"<br>\");\n      return div;\n    };\n\n    const { map } = this.props.leaflet;\n    legend.addTo(map);\n  }\n}\n\nexport default withLeaflet(Legend);\n"]},"metadata":{},"sourceType":"module"}