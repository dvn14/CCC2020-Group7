{"ast":null,"code":"var _jsxFileName = \"/home/tanto/Courses/CCC/Learns/react/ausmap/src/App.js\";\nimport React, { Component, useState } from 'react';\nimport './App.css';\nimport { Map, TileLayer, GeoJSON, Marker, Popup, CircleMarker, Tooltip, LayersControl, LayerGroup, Circle, FeatureGroup, Rectangle } from 'react-leaflet';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faRunning, faGamepad, faLaptopHouse, faHamburger, faFilm } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Control from 'react-leaflet-control';\nimport data2 from 'geojson-world-map';\nimport data1 from './sample.json';\nimport data3 from './us-states.json';\nimport data4 from './esa09.json';\nimport data8 from './file_copy.json';\nimport data from './data7984821864271563851.json';\nimport features from './features.json';\nimport cities from './cities.json';\nimport sidney from './sidney.geojson';\nimport data0 from './census.json';\nimport data6 from './multipoly.json';\nimport data77 from './census.json';\nimport { LatLng } from 'leaflet';\nimport activities from './activities.json';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Activity } from './Activity';\nlibrary.add(faRunning, faGamepad, faLaptopHouse, faHamburger, faFilm);\nconst {\n  BaseLayer,\n  Overlay\n} = LayersControl; //https://data.gov.au/geoserver/nsw-suburb-locality-boundaries-psma-administrative-boundaries/wfs?request=GetFeature&typeName=ckan_91e70237_d9d1_4719_a82f_e71b811154c6&outputFormat=json\n//const center = [-23.116667, 132.133333]\n//const center = [ -33.807908, 151.0007289 ]\n\nconst center = [-33.834905, 150.9673231];\nconst rectangle = [[51.49, -0.08], [51.5, -0.06]];\nconst layerStyle = {\n  display: 'none',\n  float: 'right'\n};\n\nfunction getColor(d) {\n  //d.properties.loc_pid.startsWith('NSW') ? '#800026' :\n  return d > 1000 ? '#800026' : d > 500 ? '#BD0026' : d > 200 ? '#E31A1C' : d > 100 ? '#FC4E2A' : d > 50 ? '#FD8D3C' : d > 20 ? '#FEB24C' : d > 10 ? '#FED976' : '#FFEDA0';\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [],\n      showMyComponent: false,\n      ordered: false,\n      selected: 'exercise'\n    };\n\n    this.setSelected = activity => {\n      console.log(\"setSelected: \" + activity);\n      this.setState({\n        selected: activity\n      });\n    };\n  }\n\n  render() {\n    console.log(\"returning: \");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, \"Most Populous Cities in\\xA0Asia\"), /*#__PURE__*/React.createElement(Map, {\n      center: center,\n      zoom: 9,\n      style: {\n        width: \"80vh\",\n        height: \"100vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(LayersControl, {\n      position: \"topright\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BaseLayer, {\n      checked: \"checked\",\n      name: \"Black and White\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(BaseLayer, {\n      name: \"Colored\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    })), cities.map((city, k) => {\n      return /*#__PURE__*/React.createElement(CircleMarker, {\n        key: k,\n        center: [city[\"coordinates\"][1], city[\"coordinates\"][0]],\n        radius: 5 * Math.log(city[this.state.selected] / 100000),\n        fillOpacity: 0.5,\n        stroke: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        direction: \"right\",\n        offset: [-8, -2],\n        opacity: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }\n      }, city[\"name\"]), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 19\n        }\n      }, city[\"id\"] + \" \" + city[this.state.selected])));\n    }), /*#__PURE__*/React.createElement(Overlay, {\n      name: \"Imagination\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(LayerGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(GeoJSON, {\n      data: features,\n      style: feature => ({\n        color: '#4a83ec',\n        weight: 0.5,\n        fillColor: '#4a83ec',\n        //getColor(feature),\n        fillOpacity: 0.7\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Marker, {\n      position: [50, 10],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, \"Popup for any custom information.\")))), /*#__PURE__*/React.createElement(Overlay, {\n      name: \"Economic Status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(LayerGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(GeoJSON, {\n      data: data,\n      style: feature => ({\n        color: '#4a83ec',\n        weight: 0.5,\n        fillColor: '#4a83ec',\n        //getColor(feature),\n        fillOpacity: 0.7\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Marker, {\n      position: [50, 10],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, \"Popup for any custom information.\"))))), this.state.showMyComponent && /*#__PURE__*/React.createElement(LayerGroup, {\n      style: layerStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Circle, {\n      center: center,\n      fillColor: \"blue\",\n      radius: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Circle, {\n      center: center,\n      fillColor: \"red\",\n      radius: 100,\n      stroke: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(LayerGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Circle, {\n      center: [51.51, -0.08],\n      color: \"green\",\n      fillColor: \"green\",\n      radius: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Control, {\n      position: \"topleft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.setState({\n        showMyComponent: !this.state.showMyComponent\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }, \"Reset View\"), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, activities.map(activities => /*#__PURE__*/React.createElement(Col, {\n      className: \"mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Activity, {\n      activities: activities,\n      key: activities.id,\n      setSelected: this.setSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }))))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/tanto/Courses/CCC/Learns/react/ausmap/src/App.js"],"names":["React","Component","useState","Map","TileLayer","GeoJSON","Marker","Popup","CircleMarker","Tooltip","LayersControl","LayerGroup","Circle","FeatureGroup","Rectangle","library","faRunning","faGamepad","faLaptopHouse","faHamburger","faFilm","FontAwesomeIcon","Control","data2","data1","data3","data4","data8","data","features","cities","sidney","data0","data6","data77","LatLng","activities","Container","Row","Col","Activity","add","BaseLayer","Overlay","center","rectangle","layerStyle","display","float","getColor","d","App","state","todos","showMyComponent","ordered","selected","setSelected","activity","console","log","setState","render","textAlign","width","height","map","city","k","Math","feature","color","weight","fillColor","fillOpacity","id"],"mappings":"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","sourcesContent":["\nimport React, { Component, useState } from 'react';\n\nimport './App.css';\nimport { Map, TileLayer, GeoJSON, Marker, Popup, CircleMarker ,Tooltip,\n  LayersControl,\n  LayerGroup,\n  Circle, FeatureGroup, Rectangle } from 'react-leaflet';\n\n  import { library } from '@fortawesome/fontawesome-svg-core';\n  import { faRunning, faGamepad, faLaptopHouse, faHamburger, faFilm } from '@fortawesome/free-solid-svg-icons';\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport Control from 'react-leaflet-control';\nimport data2 from 'geojson-world-map';\nimport data1 from './sample.json';\nimport data3 from './us-states.json';\nimport data4 from './esa09.json';\nimport data8 from './file_copy.json';\nimport data from './data7984821864271563851.json';\nimport features from './features.json';\nimport cities from './cities.json';\nimport sidney from './sidney.geojson';\nimport data0 from './census.json';\nimport data6 from './multipoly.json';\nimport data77 from './census.json';\nimport { LatLng } from 'leaflet';\n\nimport activities from './activities.json';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Activity } from './Activity'\n\nlibrary.add(faRunning, faGamepad, faLaptopHouse, faHamburger, faFilm); \n\nconst { BaseLayer, Overlay } = LayersControl\n//https://data.gov.au/geoserver/nsw-suburb-locality-boundaries-psma-administrative-boundaries/wfs?request=GetFeature&typeName=ckan_91e70237_d9d1_4719_a82f_e71b811154c6&outputFormat=json\n//const center = [-23.116667, 132.133333]\n//const center = [ -33.807908, 151.0007289 ]\nconst center = [-33.834905,150.9673231]\nconst rectangle = [\n  [51.49, -0.08],\n  [51.5, -0.06],\n]\nconst layerStyle = {\n  display: 'none',\n  float: 'right'\n}\nfunction getColor(d) {\n    //d.properties.loc_pid.startsWith('NSW') ? '#800026' :\n    return d > 1000 ? '#800026' :\n           d > 500  ? '#BD0026' :\n           d > 200  ? '#E31A1C' :\n           d > 100  ? '#FC4E2A' :\n           d > 50   ? '#FD8D3C' :\n           d > 20   ? '#FEB24C' :\n           d > 10   ? '#FED976' :\n                      '#FFEDA0';\n}\n\nclass App extends Component {\n  state = {\n    todos: [],\n    showMyComponent: false,\n    ordered: false,\n    selected: 'exercise'\n  }\n\n  setSelected = (activity) => {\n    console.log(\"setSelected: \"+activity);\n    this.setState({ selected: activity })\n  }\n\n  render() {\n\n    console.log(\"returning: \")\n    return (\n      <div>\n        <h3 style={{ textAlign: \"center\" }}>Most Populous Cities in Asia</h3>\n        <Map center={center} zoom={9} style={{ width: \"80vh\", height: \"100vh\" }}>\n\n        <LayersControl position=\"topright\">\n        <BaseLayer checked=\"checked\" name=\"Black and White\">\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"\n            />\n          </BaseLayer>\n        <BaseLayer name=\"Colored\">\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n          </BaseLayer>\n\n        {cities.map((city, k) => {\n            return (\n              <CircleMarker\n                key={k}\n                center={[city[\"coordinates\"][1], city[\"coordinates\"][0]]}\n                radius={5 * Math.log(city[this.state.selected] / 100000)}\n                fillOpacity={0.5}\n                stroke={true}\n              >\n                <Tooltip direction=\"right\" offset={[-8, -2]} opacity={1}>\n                  <strong>{city[\"name\"]}</strong>\n                  <span>{city[\"id\"] + \" \" + city[this.state.selected]}</span>\n                </Tooltip>\n              </CircleMarker>\n            );\n          })}\n          <Overlay name=\"Imagination\">\n          <LayerGroup>\n          <GeoJSON\n          data={features}\n          style={(feature) => ({\n            color: '#4a83ec',\n            weight: 0.5,\n            fillColor: '#4a83ec',//getColor(feature),\n            fillOpacity: 0.7,\n          })}\n        />\n         <Marker position={[50, 10]}>\n          <Popup>\n            Popup for any custom information.\n          </Popup>\n        </Marker>\n        </LayerGroup>\n          </Overlay>\n          <Overlay name=\"Economic Status\">\n            <LayerGroup>\n          <GeoJSON\n          data={data}\n          style={(feature) => ({\n            color: '#4a83ec',\n            weight: 0.5,\n            fillColor: '#4a83ec',//getColor(feature),\n            fillOpacity: 0.7,\n          })}\n        />\n         <Marker position={[50, 10]}>\n          <Popup>\n            Popup for any custom information.\n          </Popup>\n        </Marker>\n        </LayerGroup>\n          </Overlay>\n          </LayersControl>\n          { this.state.showMyComponent && \n            <LayerGroup style={layerStyle}>\n              <Circle center={center} fillColor=\"blue\" radius={200} />\n              <Circle\n                center={center}\n                fillColor=\"red\"\n                radius={100}\n                stroke={false}\n              />\n              <LayerGroup>\n                <Circle\n                  center={[51.51, -0.08]}\n                  color=\"green\"\n                  fillColor=\"green\"\n                  radius={100}\n                />\n              </LayerGroup>\n            </LayerGroup>\n            }\n                \n      <Control position=\"topleft\" >\n        <button \n          onClick={ () => this.setState({showMyComponent: !this.state.showMyComponent}) }\n        >\n          Reset View\n        </button>\n        <Container>\n        <Row>\n        {activities.map(activities => (\n          <Col className=\"mb-5\">\n            <Activity activities={activities} key={activities.id} setSelected={this.setSelected} />\n          </Col>\n        ))}\n        </Row>\n        </Container>\n      </Control>\n</Map>\n\n      </div>          \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}