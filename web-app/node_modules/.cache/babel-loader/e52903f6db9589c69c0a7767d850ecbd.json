{"ast":null,"code":"import { MapControl, withLeaflet } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nclass Legend extends MapControl {\n  createLeafletElement(props) {}\n\n  componentDidMount() {\n    const LOCALE = \"en-AU\";\n    const legend = L.control({\n      position: \"bottomleft\"\n    });\n\n    legend.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"legend\");\n      let labels = [];\n      let start;\n      let end;\n\n      for (let i = 0; i < this.props.grades.length; i++) {\n        start = this.props.grades[i];\n        end = this.props.grades[i + 1];\n        labels.push('<i style=\"opacity: 0.85;background:' + this.props.getColor(start + 1) + '\">&nbsp; &nbsp; &nbsp;</i> ' + parseInt(start).toLocaleString(LOCALE) + (end ? \"&ndash;\" + parseInt(end).toLocaleString(LOCALE) : \"+\"));\n      }\n\n      div.innerHTML = labels.join(\"<br/>\");\n      return div;\n    };\n\n    legend.addTo(this.props.leaflet);\n  }\n\n}\n\nexport default withLeaflet(Legend);","map":{"version":3,"sources":["/mnt/tanto/Courses/CCC/Learns/react/ausmap-cdb/src/components/Legend.js"],"names":["MapControl","withLeaflet","L","Legend","createLeafletElement","props","componentDidMount","LOCALE","legend","control","position","onAdd","div","DomUtil","create","labels","start","end","i","grades","length","push","getColor","parseInt","toLocaleString","innerHTML","join","addTo","leaflet"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,QAAwC,eAAxC;AACA,OAAOC,CAAP,MAAc,SAAd;;AAEA,MAAMC,MAAN,SAAqBH,UAArB,CAAgC;AAC9BI,EAAAA,oBAAoB,CAACC,KAAD,EAAQ,CAAE;;AAE9BC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,MAAM,GAAG,OAAf;AACA,UAAMC,MAAM,GAAGN,CAAC,CAACO,OAAF,CAAU;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAV,CAAf;;AAEAF,IAAAA,MAAM,CAACG,KAAP,GAAe,MAAM;AACnB,YAAMC,GAAG,GAAGV,CAAC,CAACW,OAAF,CAAUC,MAAV,CAAiB,KAAjB,EAAwB,QAAxB,CAAZ;AACA,UAAIC,MAAM,GAAG,EAAb;AACA,UAAIC,KAAJ;AACA,UAAIC,GAAJ;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKb,KAAL,CAAWc,MAAX,CAAkBC,MAAtC,EAA8CF,CAAC,EAA/C,EAAmD;AACjDF,QAAAA,KAAK,GAAG,KAAKX,KAAL,CAAWc,MAAX,CAAkBD,CAAlB,CAAR;AACAD,QAAAA,GAAG,GAAG,KAAKZ,KAAL,CAAWc,MAAX,CAAkBD,CAAC,GAAG,CAAtB,CAAN;AAEAH,QAAAA,MAAM,CAACM,IAAP,CACE,wCACE,KAAKhB,KAAL,CAAWiB,QAAX,CAAoBN,KAAK,GAAG,CAA5B,CADF,GAEE,6BAFF,GAGEO,QAAQ,CAACP,KAAD,CAAR,CAAgBQ,cAAhB,CAA+BjB,MAA/B,CAHF,IAIGU,GAAG,GACH,YAAYM,QAAQ,CAACN,GAAD,CAAR,CAAcO,cAAd,CAA6BjB,MAA7B,CADT,GACgD,GALtD,CADF;AAQD;;AAEDK,MAAAA,GAAG,CAACa,SAAJ,GAAgBV,MAAM,CAACW,IAAP,CAAY,OAAZ,CAAhB;AACA,aAAOd,GAAP;AACD,KAtBD;;AAwBAJ,IAAAA,MAAM,CAACmB,KAAP,CAAa,KAAKtB,KAAL,CAAWuB,OAAxB;AACD;;AAhC6B;;AAmChC,eAAe3B,WAAW,CAACE,MAAD,CAA1B","sourcesContent":["import { MapControl, withLeaflet } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nclass Legend extends MapControl {\n  createLeafletElement(props) {}\n\n  componentDidMount() {\n    const LOCALE = \"en-AU\";\n    const legend = L.control({ position: \"bottomleft\" });\n\n    legend.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"legend\");\n      let labels = [];\n      let start;\n      let end;\n      \n      for (let i = 0; i < this.props.grades.length; i++) {\n        start = this.props.grades[i];\n        end = this.props.grades[i + 1];\n\n        labels.push(\n          '<i style=\"opacity: 0.85;background:' +\n            this.props.getColor(start + 1) +\n            '\">&nbsp; &nbsp; &nbsp;</i> ' +\n            parseInt(start).toLocaleString(LOCALE) +\n            (end ?\n             \"&ndash;\" + parseInt(end).toLocaleString(LOCALE) : \"+\")\n        );\n      }\n\n      div.innerHTML = labels.join(\"<br/>\");\n      return div;\n    };\n\n    legend.addTo(this.props.leaflet);\n  }\n}\n\nexport default withLeaflet(Legend);\n"]},"metadata":{},"sourceType":"module"}